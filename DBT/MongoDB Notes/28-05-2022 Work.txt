Microsoft Windows [Version 10.0.19044.1706]
(c) Microsoft Corporation. All rights reserved.

C:\Users\DELL>mongosh --host=localhost --port=27017
Current Mongosh Log ID: 62918c256de7438fdd3f6c7d
Connecting to:          mongodb://localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.4.2
Using MongoDB:          5.0.8
Using Mongosh:          1.4.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting:
   2022-05-27T20:53:45.650+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

Warning: Found ~/.mongorc.js, but not ~/.mongoshrc.js. ~/.mongorc.js will not be loaded.
  You may want to copy or rename ~/.mongorc.js to ~/.mongoshrc.js.
test> use primaryDB
switched to db primaryDB
primaryDB> sho dbs;
Uncaught:
SyntaxError: Missing semicolon. (1:3)

> 1 | sho dbs;
    |    ^
  2 |

primaryDB> show dbs;
admin       40.00 KiB
config      36.00 KiB
local       72.00 KiB
primaryDB  272.00 KiB
primaryDB> show tables;
Book1
Books
Dept
emp
Emp
primaryDB> edit
Opening an editor...

primaryDB> edit
Opening an editor...

primaryDB> db.emp.find();
[
  {
    _id: ObjectId("62909edda9fd08e69f1af61c"),
    EMPNO: '6001\tGITA\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t30\t1\tGITA\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61d"),
    EMPNO: '7369\tSMITH\tM\tCLERK\t7902\t1980-12-17\t800\t\\N\t20\t2\tTRITONE\ta12recmpm\t7032300023\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61e"),
    EMPNO: '7415\tAARAV\tM\tCLERK\t7902\t1981-12-31\t3350\t\\N\t10\t\\N\tAARAV\t\\N\t7032300084\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61f"),
    EMPNO: '7421\tTHOMAS\tM\tCLERK\t7920\t1981-07-19\t1750\t\\N\t10\t1\tTHOMAS\tr50mpm\t7032300011\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af620"),
    EMPNO: '7499\tALLEN\tM\tSALESMAN\t7698\t1981-02-20\t1600\t300\t30\t4\tALWAYS TESTE\tsales@2017\t7032300096\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af621"),
    EMPNO: '7521\tWARD\tM\tSALESMAN\t7698\t1981-02-22\t1250\t500\t30\t1\tWARD\tsales@2017\t7132300034\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af622"),
    EMPNO: '6129\tVRUSHALI\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t50\t1\tVRUSHALI\tPUN@8877\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af623"),
    EMPNO: '6473\tSHARMIN\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tSHARMIN\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af624"),
    EMPNO: '6781\tBANDISH\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tBANDISH\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af625"),
    EMPNO: '7566\tJONES\tM\tMANAGER\t7839\t1981-04-02\t2975\t\\N\t20\t4\tHONEYCOMB\ta12recmpm\t7132300039\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af626"),
    EMPNO: '7698\tBLAKE\tM\tMANAGER\t7839\t1981-05-01\t2850\t\\N\t30\t1\tBIG BEN\tsales@2017\t7132300027\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af627"),
    EMPNO: '7839\tKING\tM\tPRESIDENT\t\\N\t1981-11-17\t5000\t\\N\t10\t1\tKING\tr50mpm\t7132300081\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af628"),
    EMPNO: '7840\tFRED\tM\tvice PRESIDENT\t7839\t1983-08-09\t5000\t\\N\t20\t1\tSAND STONE\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af629"),
    EMPNO: '7844\tTURNER\tM\tSALESMAN\t7698\t1981-09-08\t1500\t0\t30\t5\tSAND DUST\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62a"),
    EMPNO: '7654\tMARTIN\tM\tSALESMAN\t7698\t1981-09-28\t1250\t1400\t30\t6\tLIFE RACER\tsales@2017\t7132300050\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62b"),
    EMPNO: '7782\tCLARK\tM\tMANAGER\t7839\t1981-06-09\t2450\t\\N\t10\t3\tCLARK\tr50mpm\t7032300001\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62c"),
    EMPNO: '7788\tSCOTT\tM\tANALYST\t7566\t1982-12-09\t3000\t\\N\t20\t3\tWHITE SAND\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62d"),
    EMPNO: '7876\tADAMS\tM\tCLERK\t7788\t1983-01-12\t1100\t\\N\t20\t1\tCRAZY ANYONE\ta12recmpm\t7132300086\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62e"),
    EMPNO: '7900\tJAMES\tM\tCLERK\t7698\t1981-12-03\t950\t\\N\t30\t2\tCRAZY LEADER\tsales@2017\t7132300042\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62f"),
    EMPNO: '7902\tFORD\tM\tANALYST\t7566\t1981-12-03\t3000\t\\N\t20\t4\tCONBRIO\ta12recmpm\t\\N\t0'
  }
]
Type "it" for more
primaryDB> db.getCollectionNames();
[ 'Book1', 'emp', 'Emp', 'Books', 'Dept' ]
primaryDB> db.createCollection('Student',{cappped:true,size:1000,max:2});
MongoServerError: BSON field 'create.cappped' is an unknown field.
primaryDB> db.createCollection('Student',{capped:true,size:1000,max:2});
{ ok: 1 }
primaryDB> db.getCollectionNames();
[ 'Book1', 'Student', 'emp', 'Emp', 'Books', 'Dept' ]
primaryDB> db.emp.isCapped();
false
primaryDB> db.Student.isCapped();
true
primaryDB> db.Student.insert({id:1,sname:"Tejas"});
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("62918d636e113dd7665684d2") }
}
primaryDB> db.Student.remove();
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
MongoshInvalidInputError: [COMMON-10001] Missing required argument at position 0 (Collection.remove)
primaryDB> db.Student.remove({});
{ acknowledged: true, deletedCount: 1 }
primaryDB> db.Student.insert({_id:1,sname:"Tejas"});
{ acknowledged: true, insertedIds: { '0': 1 } }
primaryDB> db.Student.find();
[ { _id: 1, sname: 'Tejas' } ]
primaryDB> db.Student.insert({_id:2,sname:"Tejas",isActive:true});
{ acknowledged: true, insertedIds: { '0': 2 } }
primaryDB> db.Student.find();
[
  { _id: 1, sname: 'Tejas' },
  { _id: 2, sname: 'Tejas', isActive: true }
]
primaryDB> db.Student.insert({_id:2,sname:"Tejas",isActive:false,salary:3000});
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Student index: _id_ dup key: { _id: 2 }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Student index: _id_ dup key: { _id: 2 }',
          errInfo: undefined,
          op: { _id: 2, sname: 'Tejas', isActive: false, salary: 3000 }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [ { index: 0, _id: 2 } ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Student.insert({_id:3,sname:"Tejas",isActive:false,salary:3000});
{ acknowledged: true, insertedIds: { '0': 3 } }
primaryDB> db.Student.find();
[
  { _id: 2, sname: 'Tejas', isActive: true },
  { _id: 3, sname: 'Tejas', isActive: false, salary: 3000 }
]
primaryDB> db.Student.insert({_id:4,sname:"Tejas4",isActive:false,salary:3000});
{ acknowledged: true, insertedIds: { '0': 4 } }
primaryDB> db.Student.find();
[
  { _id: 3, sname: 'Tejas', isActive: false, salary: 3000 },
  { _id: 4, sname: 'Tejas4', isActive: false, salary: 3000 }
]
primaryDB> db.createCollection('Person');
{ ok: 1 }
primaryDB> show tables;
Book1
Books
Dept
emp
Emp
Person
Student
primaryDB> db.getCollectionNames();
[
  'Book1', 'Student',
  'emp',   'Person',
  'Emp',   'Books',
  'Dept'
]
primaryDB> edit db.person.insertOne({_id:"Tejas",Name:"Tejas Jawale",City:"Nashik",State:"MH"})
Opening an editor...

primaryDB> edit db.person.insertOne({_id:"Tejas",Name:"Tejas Jawale",City:"Nashik",State:"MH"})
Opening an editor...

primaryDB> db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails { PassPortNo : "Tejas12101999", validity:"25 Years" } })
Uncaught:
SyntaxError: Unexpected token, expected "," (1:103)

> 1 | db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails { PassPortNo : "Tejas12101999", validity:"25 Years" } })
    |                                                                                                        ^
  2 |

primaryDB> edit db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails { PassPortNo : "Tejas12101999", validity:"25 Years" } })
Opening an editor...

primaryDB> db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails: { PassPortNo: "Tejas12101999", validity: "25 Years" } })
{ acknowledged: true, insertedId: 'Tejas' }
primaryDB> db.createCollection('Person1');
{ ok: 1 }
primaryDB> db.createCollection('PassPort');
{ ok: 1 }"MH", PassPortDetails: { PassPortNo: "Tejas12101999", validity: "25 Years"primaryDB> db.Person1.insertOne({_id:"Tejas",Name:"Tejas Jawale",City:"Nashik",State:"MH"})
{ acknowledged: true, insertedId: 'Tejas' }
primaryDB> db.Person1.find();
[ { _id: 'Tejas', Name: 'Tejas Jawale', City: 'Nashik', State: 'MH' } ]
primaryDB> db.Person1.insertOne({_id:"Tejas",PassPortNo:"Tejas1211099", validity:"25 Years"});
MongoServerError: E11000 duplicate key error collection: primaryDB.Person1 index: _id_ dup key: { _id: "Tejas" }
primaryDB> db.PassPort.insertOne({_id:"Tejas",PassPortNo:"Tejas1211099", validity:"25 Years"});
{ acknowledged: true, insertedId: 'Tejas' }
primaryDB> db.Person1.find();
[ { _id: 'Tejas', Name: 'Tejas Jawale', City: 'Nashik', State: 'MH' } ]
primaryDB> db.PassPort.find();
[ { _id: 'Tejas', PassPortNo: 'Tejas1211099', validity: '25 Years' } ]
primaryDB> db.Person.find();
[   Name: 'Tejas Jawale',
  { City: 'Nashik',
    _id: 'Tejas',
    Name: 'Tejas Jawale',ssPortNo: 'Tejas12101999' }
    City: 'Nashik',
    State: 'MH',
    PassPortDetails: { PassPortNo: 'Tejas12101999', validity: '25 Years' }
  }
]
primaryDB> edit db.Person1.aggregate()
Opening an editor...

primaryDB> db.Person1.aggregate()
[ { _id: 'Tejas', Name: 'Tejas Jawale', City: 'Nashik', State: 'MH' } ]
primaryDB>

primaryDB> edit db.Person1.aggregate()
Opening an editor...

primaryDB> db.Person1.aggregate([{ $lookup: { from: "PassPort", localField: "_id", foreignField: "_id", as: "Passport Details" } }])
[
  {
    _id: 'Tejas',
    Name: 'Tejas Jawale',
    City: 'Nashik',
    State: 'MH',
    'Passport Details': [
      {
        _id: 'Tejas',
        PassPortNo: 'Tejas1211099',
        validity: '25 Years'
      }
    ]
  }
]
primaryDB> db.getCollectionNames();
[
  'Book1',   'Person1',
  'Student', 'emp',
  'person',  'PassPort',
  'Person',  'Emp',
  'Books',   'Dept'
]
primaryDB> db.Books.find();
[
  {
    _id: ObjectId("62903d8f0c4d30f244255889"),
    Title: 'JAVA C.R.',
    Author: 'Tejas'
  },
  {
    _id: ObjectId("62903e1b0c4d30f24425588a"),
    Title: 'MySQL',
    Author: 'Sayali',
    Price: 1200
  },
  {
    _id: ObjectId("629040a60c4d30f24425588c"),
    Title: 'SHAM CHI AAI',
    Author: 'Pandurang Sadashiv Sane',
    Phone: [ 1234567, 7654321 ],
    EmailID: [ 'ABC@gmail.com', 'DEF@gamil.com' ],
    Cost: { Currency: '$', Price: 1300 }
  },
  {
    _id: ObjectId("629045ba7ac955025a0dd16d"),
    Title: 'hBase',
    ISBN: 'BVC321',
    Cost: { Currency: 'Rs.', Price: 1300 },
    Author: [
      { Name: 'Ram', City: 'Pune' },
      { Name: 'SHAM', City: 'Nashik', Phone: 12345 }
    ]
  }
]
primaryDB> db.Book1.find();
[
  { _id: 3, Title: 'Tejas', cost: 1450 },
  { _id: ObjectId("629075767ac955025a0dd177"), Title: 'ABC' }
]
primaryDB> db.Book1.remove({});
{ acknowledged: true, deletedCount: 2 }
primaryDB> db.Book1.find();

primaryDB> edit db.Book1.insertMany([{}]);
Opening an editor...

primaryDB> db.Book1.insertMany([{}]);
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("629199c46e113dd7665684d3") }
}
primaryDB> db.Book1.remove({});
{ acknowledged: true, deletedCount: 1 }
primaryDB> edit db.Book1.insertMany([{}]);
Opening an editor...

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:73)

> 1 | db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }])
    |                                                                          ^
  2 |

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }]);
Uncaught:
SyntaxError: Unexpected token, expected "," (1:73)

> 1 | db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }]);
    |                                                                          ^
  2 |

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",}{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
Uncaught:
SyntaxError: Unexpected token, expected "," (1:70)

> 1 | db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",}{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
    |                                                                       ^
  2 |

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",},{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
{
  acknowledged: true,
  insertedIds: { '0': 'B1', '1': 'B2', '2': 'B3', '3': 'B4', '4': 'B5' }
}
primaryDB> edit db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",},{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
Opening an editor...

primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: 'B1' }, { _id: "B2", Title: "T2", ISBN: 'B2' }, { _id: "B3", Title: "T3", ISBN: 'B3' }, { _id: "B4", TTitle: "T4", ISBN: 'B4' }, { _id: "B5", Title: "T5", ISBN: 'B5' }]);
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }',
          errInfo: undefined,
          op: { _id: 'B1', Title: 'T1', ISBN: 'B1' }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [
      { index: 0, _id: 'B1' },
      { index: 1, _id: 'B2' },
      { index: 2, _id: 'B3' },
      { index: 3, _id: 'B4' },
      { index: 4, _id: 'B5' }
    ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Book1.find();
[
  { _id: 'B1', Title: 'T1' },
  { _id: 'B2', Title: 'T2' },
  { _id: 'B3', Title: 'T3' },
  { _id: 'B4', Title: 'T4' },
  { _id: 'B5', Title: 'T5' }
]
primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: 'B1' }, { _id: "B2", Title: "T2", ISBN: 'B2' }, { _id: "B3", Title: "T3", ISBN: 'B3' }, { _id: "B4", Title: "T4", ISBN: 'B4' }, { _id: "B5", Title: "T5", ISBN: 'B5' }]);
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }',
          errInfo: undefined,
          op: { _id: 'B1', Title: 'T1', ISBN: 'B1' }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [
      { index: 0, _id: 'B1' },
      { index: 1, _id: 'B2' },
      { index: 2, _id: 'B3' },
      { index: 3, _id: 'B4' },
      { index: 4, _id: 'B5' }
    ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: "B1" }, { _id: "B2", Title: "T2", ISBN: "B2" }, { _id: "B3", Title: "T3", ISBN: "B3" }, { _id: "B4", Title: "T4", ISBN: "B4" }, { _id: "B5", Title: "T5", ISBN: "B5" }]);
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }',
          errInfo: undefined,
          op: { _id: 'B1', Title: 'T1', ISBN: 'B1' }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [
      { index: 0, _id: 'B1' },
      { index: 1, _id: 'B2' },
      { index: 2, _id: 'B3' },
      { index: 3, _id: 'B4' },
      { index: 4, _id: 'B5' }
    ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Book1.remove({});
{ acknowledged: true, deletedCount: 5 }
primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: "B1" }, { _id: "B2", Title: "T2", ISBN: "B2" }, { _id: "B3", Title: "T3", ISBN: "B3" }, { _id: "B4", Title: "T4", ISBN: "B4" }, { _id: "B5", Title: "T5", ISBN: "B5" }]);
{
  acknowledged: true,
  insertedIds: { '0': 'B1', '1': 'B2', '2': 'B3', '3': 'B4', '4': 'B5' }
}
primaryDB> db.Book1.find();
[
  { _id: 'B1', Title: 'T1', ISBN: 'B1' },
  { _id: 'B2', Title: 'T2', ISBN: 'B2' },
  { _id: 'B3', Title: 'T3', ISBN: 'B3' },
  { _id: 'B4', Title: 'T4', ISBN: 'B4' },
  { _id: 'B5', Title: 'T5', ISBN: 'B5' }
]
primaryDB> db.createCollection('Author');
{ ok: 1 }
primaryDB> edit db.Author.insertMany([{}]);
Opening an editor...

primaryDB> edit db.Author.insertMany([{}]);
Opening an editor...

primaryDB> edit db.Author.insertMany([{}]);
Opening an editor...

primaryDB> db.Author.insertMany([{ _id: "A1", Name: "N1", bookID: "B1" }, { _id: "A2", Name: "N2", bookID: "B2" }, { _id: "A3", Name: "N4", bookID: "B4" }, { _id: "A5", Name: "N5", bookID: "B5" }, { _id: "A6", Name: "N6", bookID: "B6" }, { _id: "A7", Name: "N7", bookID: "B7" }, { _id: "A8", Name: "N8", bookID: "B8" }, { _id: "A9", Name: "N9", bookID: "B9" }, { _id: "A10", Name: "N10", bookID: "B10" }, { _id: "A11", Name: "N11", bookID: "B11" }]);
{
  acknowledged: true,
  insertedIds: {
    '0': 'A1',
    '1': 'A2',
    '2': 'A3',
    '3': 'A5',
    '4': 'A6',
    '5': 'A7',
    '6': 'A8',
    '7': 'A9',
    '8': 'A10',
    '9': 'A11'
  }
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> edit db.Book1.aggregate([{}])
Opening an editor...

primaryDB> db.Book1.aggregate([{ $lookup: { from: "Author", localField: "ISBN", forforeignField: "bookID", as: "Author Details" } }])
[
  {
    _id: 'B1',
    Title: 'T1',
    ISBN: 'B1',
    'Author Details': [ { _id: 'A1', Name: 'N1', bookID: 'B1' } ]
  },
  {
    _id: 'B2',
    Title: 'T2',
    ISBN: 'B2',
    'Author Details': [ { _id: 'A2', Name: 'N2', bookID: 'B2' } ]
  },
  { _id: 'B3', Title: 'T3', ISBN: 'B3', 'Author Details': [] },
  {
    _id: 'B4',
    Title: 'T4',
    ISBN: 'B4',
    'Author Details': [ { _id: 'A3', Name: 'N4', bookID: 'B4' } ]
  },
  {
    _id: 'B5',
    Title: 'T5',
    ISBN: 'B5',
    'Author Details': [ { _id: 'A5', Name: 'N5', bookID: 'B5' } ]
  }
]
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{name:"Tejas"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10', name: 'Tejas' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{Name:"Tejas"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', name: 'Tejas' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.remove({});
{ acknowledged: true, deletedCount: 10 }
primaryDB> db.Author.insertMany([{ _id: "A1", Name: "N1", bookID: "B1" }, { _id: "A2", Name: "N2", bookID: "B2" }, { _id: "A3", Name: "N4", bookID: "B4" }, { _id: "A5", Name: "N5", bookID: "B5" }, { _id: "A6", Name: "N6", bookID: "B6" }, { _id: "A7", Name: "N7", bookID: "B7" }, { _id: "A8", Name: "N8", bookID: "B8" }, { _id: "A9", Name: "N9", bookID: "B9" }, { _id: "A10", Name: "N10", bookID: "B10" }, { _id: "A11", Name: "N11", bookID: "B11" }]);
{
  acknowledged: true,
  insertedIds: {
    '0': 'A1',
    '1': 'A2',
    '2': 'A3',
    '3': 'A5',
    '4': 'A6',
    '5': 'A7',
    '6': 'A8',
    '7': 'A9',
    '8': 'A10',
    '9': 'A11'
  }
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{Name:"Tejas"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{Charges:12000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', Charges: 12000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$set:{Charges:12000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 9,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1', Charges: 12000 },
  { _id: 'A2', Name: 'N2', bookID: 'B2', Charges: 12000 },
  { _id: 'A3', Name: 'N4', bookID: 'B4', Charges: 12000 },
  { _id: 'A5', Name: 'N5', bookID: 'B5', Charges: 12000 },
  { _id: 'A6', Name: 'N6', bookID: 'B6', Charges: 12000 },
  { _id: 'A7', Name: 'N7', bookID: 'B7', Charges: 12000 },
  { _id: 'A8', Name: 'N8', bookID: 'B8', Charges: 12000 },
  { _id: 'A9', Name: 'N9', bookID: 'B9', Charges: 12000 },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', Charges: 12000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11', Charges: 12000 }
]
primaryDB> db.Author.updateMany({},{$unset:{Charges:12000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$unset:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 0,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$set:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1', C1: 12000, C2: 30000 },
  { _id: 'A2', Name: 'N2', bookID: 'B2', C1: 12000, C2: 30000 },
  { _id: 'A3', Name: 'N4', bookID: 'B4', C1: 12000, C2: 30000 },
  { _id: 'A5', Name: 'N5', bookID: 'B5', C1: 12000, C2: 30000 },
  { _id: 'A6', Name: 'N6', bookID: 'B6', C1: 12000, C2: 30000 },
  { _id: 'A7', Name: 'N7', bookID: 'B7', C1: 12000, C2: 30000 },
  { _id: 'A8', Name: 'N8', bookID: 'B8', C1: 12000, C2: 30000 },
  { _id: 'A9', Name: 'N9', bookID: 'B9', C1: 12000, C2: 30000 },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', C1: 12000, C2: 30000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11', C1: 12000, C2: 30000 }
]
primaryDB> db.Author.updateMany({},{$unset:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$set:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1', C1: 12000, C2: 30000 },
  { _id: 'A2', Name: 'N2', bookID: 'B2', C1: 12000, C2: 30000 },
  { _id: 'A3', Name: 'N4', bookID: 'B4', C1: 12000, C2: 30000 },
  { _id: 'A5', Name: 'N5', bookID: 'B5', C1: 12000, C2: 30000 },
  { _id: 'A6', Name: 'N6', bookID: 'B6', C1: 12000, C2: 30000 },
  { _id: 'A7', Name: 'N7', bookID: 'B7', C1: 12000, C2: 30000 },
  { _id: 'A8', Name: 'N8', bookID: 'B8', C1: 12000, C2: 30000 },
  { _id: 'A9', Name: 'N9', bookID: 'B9', C1: 12000, C2: 30000 },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', C1: 12000, C2: 30000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11', C1: 12000, C2: 30000 }
]
primaryDB> db.Author.updateMany({},{$rename:{C1:"Salary" , C2 :"Commission"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12000
  }
]
primaryDB> db.Author.updateMany({},{$inc:{Salary:25.57});
Uncaught:
SyntaxError: Unexpected token, expected "," (1:44)

> 1 | db.Author.updateMany({},{$inc:{Salary:25.57});
    |                                             ^
  2 |

primaryDB> db.Author.updateMany({},{$inc:{Salary:25.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12025.57
  }
]
primaryDB> db.Author.updateMany({},{$inc:{Salary:625.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12651.14
  }
]
primaryDB> db.Author.updateOne({},{$inc:{Salary:25.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12676.71
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12651.14
  }
]
primaryDB> db.Author.deleteOne({_id:"A11"});
{ acknowledged: true, deletedCount: 1 }
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12676.71
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12651.14
  }
]
primaryDB> db.Author.deleteMany({Salary:{$gt:12650}});
{ acknowledged: true, deletedCount: 9 }
primaryDB> db.Author.find();

primaryDB> db.Author.insertMany([{ _id: "A1", Name: "N1", bookID: "B1" }, { _id: "A2", Name: "N2", bookID: "B2" }, { _id: "A3", Name: "N4", bookID: "B4" }, { _id: "A5", Name: "N5", bookID: "B5" }, { _id: "A6", Name: "N6", bookID: "B6" }, { _id: "A7", Name: "N7", bookID: "B7" }, { _id: "A8", Name: "N8", bookID: "B8" }, { _id: "A9", Name: "N9", bookID: "B9" }, { _id: "A10", Name: "N10", bookID: "B10" }, { _id: "A11", Name: "N11", bookID: "B11" }]);
{
  acknowledged: true,
  insertedIds: {
    '0': 'A1',
    '1': 'A2',
    '2': 'A3',
    '3': 'A5',
    '4': 'A6',
    '5': 'A7',
    '6': 'A8',
    '7': 'A9',
    '8': 'A10',
    '9': 'A11'
  }
}
primaryDB> db.Author.updateMany({},{$set:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.updateMany({},{$rename:{C1:"Salary" , C2 :"Commission"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.updateMany({},{$inc:{Salary:625.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.updateOne({},{$inc:{Salary:25.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> show tables;
Author
Book1
Books
Dept
emp
Emp
PassPort
person
Person
Person1
Student
primaryDB> db.find.emp();
TypeError: db.find.emp is not a function
primaryDB> db.emp.find();
[
  {
    _id: ObjectId("62909edda9fd08e69f1af61c"),
    EMPNO: '6001\tGITA\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t30\t1\tGITA\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61d"),
    EMPNO: '7369\tSMITH\tM\tCLERK\t7902\t1980-12-17\t800\t\\N\t20\t2\tTRITONE\ta12recmpm\t7032300023\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61e"),
    EMPNO: '7415\tAARAV\tM\tCLERK\t7902\t1981-12-31\t3350\t\\N\t10\t\\N\tAARAV\t\\N\t7032300084\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61f"),
    EMPNO: '7421\tTHOMAS\tM\tCLERK\t7920\t1981-07-19\t1750\t\\N\t10\t1\tTHOMAS\tr50mpm\t7032300011\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af620"),
    EMPNO: '7499\tALLEN\tM\tSALESMAN\t7698\t1981-02-20\t1600\t300\t30\t4\tALWAYS TESTE\tsales@2017\t7032300096\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af621"),
    EMPNO: '7521\tWARD\tM\tSALESMAN\t7698\t1981-02-22\t1250\t500\t30\t1\tWARD\tsales@2017\t7132300034\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af622"),
    EMPNO: '6129\tVRUSHALI\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t50\t1\tVRUSHALI\tPUN@8877\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af623"),
    EMPNO: '6473\tSHARMIN\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tSHARMIN\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af624"),
    EMPNO: '6781\tBANDISH\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tBANDISH\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af625"),
    EMPNO: '7566\tJONES\tM\tMANAGER\t7839\t1981-04-02\t2975\t\\N\t20\t4\tHONEYCOMB\ta12recmpm\t7132300039\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af626"),
    EMPNO: '7698\tBLAKE\tM\tMANAGER\t7839\t1981-05-01\t2850\t\\N\t30\t1\tBIG BEN\tsales@2017\t7132300027\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af627"),
    EMPNO: '7839\tKING\tM\tPRESIDENT\t\\N\t1981-11-17\t5000\t\\N\t10\t1\tKING\tr50mpm\t7132300081\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af628"),
    EMPNO: '7840\tFRED\tM\tvice PRESIDENT\t7839\t1983-08-09\t5000\t\\N\t20\t1\tSAND STONE\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af629"),
    EMPNO: '7844\tTURNER\tM\tSALESMAN\t7698\t1981-09-08\t1500\t0\t30\t5\tSAND DUST\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62a"),
    EMPNO: '7654\tMARTIN\tM\tSALESMAN\t7698\t1981-09-28\t1250\t1400\t30\t6\tLIFE RACER\tsales@2017\t7132300050\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62b"),
    EMPNO: '7782\tCLARK\tM\tMANAGER\t7839\t1981-06-09\t2450\t\\N\t10\t3\tCLARK\tr50mpm\t7032300001\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62c"),
    EMPNO: '7788\tSCOTT\tM\tANALYST\t7566\t1982-12-09\t3000\t\\N\t20\t3\tWHITE SAND\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62d"),
    EMPNO: '7876\tADAMS\tM\tCLERK\t7788\t1983-01-12\t1100\t\\N\t20\t1\tCRAZY ANYONE\ta12recmpm\t7132300086\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62e"),
    EMPNO: '7900\tJAMES\tM\tCLERK\t7698\t1981-12-03\t950\t\\N\t30\t2\tCRAZY LEADER\tsales@2017\t7132300042\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62f"),
    EMPNO: '7902\tFORD\tM\tANALYST\t7566\t1981-12-03\t3000\t\\N\t20\t4\tCONBRIO\ta12recmpm\t\\N\t0'
  }
]
Type "it" for more
primaryDB> it
[
  {
    _id: ObjectId("62909edda9fd08e69f1af630"),
    EMPNO: '7919\tHOFFMAN\tM\tMANAGER\t7566\t1982-03-24\t4150\t\\N\t30\t3\tINTERVAL\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af631"),
    EMPNO: '7920\tGRASS\tM\tSALESMAN\t7919\t1980-02-14\t2575\t2700\t30\t5\tGRASS\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af632"),
    EMPNO: '7934\tMILLER\tM\tCLERK\t7782\t1982-01-23\t1300\t\\N\t10\t2\tQUARTERNOTE\tr50mpm\t7132300055\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af633"),
    EMPNO: '7945\tAARUSH\tM\tSALESMAN\t7902\t1980-02-14\t1350\t2700\t30\t\\N\tAARUSH\tABCDEF\t\\N\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af634"),
    EMPNO: '7949\tALEX\tM\tMANAGER\t7698\t1982-01-24\t1250\t500\t30\t5\tQUARTERREST\tsales@2017\t7156567183\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af635"),
    EMPNO: '8433\tNATASHA\tF\tCLERK\t7920\t1981-07-19\t1750\t\\N\t30\t1\tNATASHA\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af636"),
    EMPNO: '9400\tSANGITA\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t50\t1\tSANGITA\t\\N\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af637"),
    EMPNO: '9473\tSUPRIYA\tF\tANALYST\t7920\t1981-07-19\t1750\t\\N\t50\t1\tSUPRIYA\tXYZ@1234\t\\N\t1'
  }
]
primaryDB> db.Emp.find();
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f7"),
    empid: 1023,
    ename: 'jack',
    address: {
      building: '2780',
      coord: [ -73.98241999999999, 40.579505 ],
      street: 'Stillwell Avenue',
      zipcode: '11224'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Air Force Blue', 'Apple Green' ],
    fruit: [ 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'accountant',
    mgr: 1022,
    hiredate: ISODate("1981-04-02T00:00:00.000Z"),
    sal: 2700,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fa"),
    empid: 1023,
    ename: 'scott',
    address: {
      building: '97-22',
      coord: [ -73.8601152, 40.7311739 ],
      street: '63 Road',
      zipcode: '11374'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Ash Grey', 'White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93872', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-28T00:00:00.000Z"),
    sal: 2500,
    comm: 350,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fb"),
    empid: 1024,
    ename: 'martin',
    address: {
      building: '8825',
      coord: [ -73.8803827, 40.7643124 ],
      street: 'Astoria Boulevard',
      zipcode: '11369'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Banana Yellow' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '72877', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-02-20T00:00:00.000Z"),
    sal: 2900,
    comm: 735,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fc"),
    empid: 1025,
    ename: 'crow',
    address: {
      building: '2206',
      coord: [ -74.1377286, 40.6119572 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green', 'Ash Grey' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77876', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-08T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fd"),
    empid: 1027,
    ename: 'richards',
    address: {
      building: '6409',
      coord: [ -74.00528899999999, 40.628886 ],
      street: '11 Avenue',
      zipcode: '11219'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Charcoal', 'Cherry' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '83972', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-02-22T00:00:00.000Z"),
    sal: 1500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fe"),
    empid: 1026,
    ename: 'blake',
    address: {
      building: '7114',
      coord: [ -73.9068506, 40.6199034 ],
      street: 'Avenue U',
      zipcode: '11234'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brass', 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989ff"),
    empid: 1020,
    ename: 'king',
    address: {
      building: '1007',
      coord: [ -73.856077, 40.848447 ],
      street: 'Morris Park Ave',
      zipcode: '10462'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'blue', 'black' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93478', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'president',
    mgr: null,
    hiredate: ISODate("1981-11-17T00:00:00.000Z"),
    sal: 5000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a00"),
    empid: 1028,
    ename: 'peter',
    address: {
      building: '1839',
      coord: [ -73.9482609, 40.6408271 ],
      street: 'Nostrand Avenue',
      zipcode: '11226'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brown' ],
    fruit: [ 'banana', 'Jackfruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '92783', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1025,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a01"),
    empid: 1031,
    ename: 'sharmin',
    address: {
      building: '1269',
      coord: [ -73.871194, 40.6730975 ],
      street: 'Sutter Avenue',
      zipcode: '11208'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Cream' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '16523', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1983-01-12T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a02"),
    empid: 1032,
    ename: 'vrushali',
    address: {
      building: '1',
      coord: [ -73.96926909999999, 40.7685235 ],
      street: 'East   66 Street',
      zipcode: '10065'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Iceberg' ],
    fruit: [ 'Orange', 'Papaya', 'Kiwi' ],
    cards: [
      { aadhar: { 'aadhar-No': '22343', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1030,
    hiredate: ISODate("1982-02-23T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a03"),
    empid: 1033,
    ename: 'vasant',
    address: {
      building: '705',
      coord: [ -73.9653967, 40.6064339 ],
      street: 'Kings Highway',
      zipcode: '11223'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93824', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1982-02-24T00:00:00.000Z"),
    sal: 2200,
    comm: 0,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a05"),
    empid: 1034,
    ename: 'vasu',
    address: {
      building: '203',
      coord: [ -73.97822040000001, 40.6435254 ],
      street: 'Church Avenue',
      zipcode: '11218'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'Dates' ],
    cards: [
      { aadhar: { 'aadhar-No': '19826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1980-02-14T00:00:00.000Z"),
    sal: 2200,
    comm: 250,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a06"),
    empid: 1035,
    ename: 'rahul',
    address: {
      building: '265-15',
      coord: [ -73.7032601, 40.7386417 ],
      street: 'Hillside Avenue',
      zipcode: '11004'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Lychee', 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '00998', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1029,
    hiredate: ISODate("1981-12-31T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a07"),
    empid: 1036,
    ename: 'raju',
    address: {
      building: '6909',
      coord: [ -74.0259567, 40.6353674 ],
      street: '3 Avenue',
      zipcode: '11209'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Yellow' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '55622', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1031,
    hiredate: ISODate("1983-06-15T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a08"),
    empid: 1030,
    ename: 'saleel',
    address: {
      building: '7715',
      coord: [ -73.9973325, 40.61174889999999 ],
      street: '18 Avenue',
      zipcode: '11214'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Coral' ],
    fruit: [ 'Dates', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '73822', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 2900,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a09"),
    empid: 1037,
    ename: 'ramu',
    address: {
      building: '522',
      coord: [ -73.95171, 40.767461 ],
      street: 'East   74 Street',
      zipcode: '10021'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lemon' ],
    fruit: [ 'Jackfruit', 'banana', 'Apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '00983', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1031,
    hiredate: ISODate("1983-07-12T00:00:00.000Z"),
    sal: 1400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0a"),
    empid: 1040,
    ename: 'amit',
    address: {
      building: '759',
      coord: [ -73.9925306, 40.7309346 ],
      street: 'Broadway',
      zipcode: '10003'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '66623', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1029,
    hiredate: ISODate("1982-12-08T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ 85088422, Long("9822884228") ]
  }
]
Type "it" for more
primaryDB> it
[
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0b"),
    empid: 1039,
    ename: 'saleel',
    address: {
      building: '129-08',
      coord: [ -73.839297, 40.78147 ],
      street: '20 Avenue',
      zipcode: '11356'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Cherry', 'Charcoal' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '66675', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1022,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 3700,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0c"),
    empid: 1042,
    ename: 'amit',
    address: {
      building: '502',
      coord: [ -73.976112, 40.786714 ],
      street: 'Amsterdam Avenue',
      zipcode: '10024'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77787', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1029,
    hiredate: ISODate("1981-11-03T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ '9850884228', '9822884228' ]
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0d"),
    empid: 1041,
    ename: 'dinesh',
    address: {
      building: '3406',
      coord: [ -73.94024739999999, 40.7623288 ],
      street: '10 Street',
      zipcode: '11106'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Air Force Blue' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77767', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1021,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ 85088422, Long("9822884228") ],
    skills: { languages: [ 'C++', 'JAVA' ], web: [ 'php', 'java', 'jquery' ] }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0e"),
    empid: 1043,
    ename: 'dinesh',
    address: {
      building: '730',
      coord: [ -73.96805719999999, 40.7925587 ],
      street: 'Columbus Avenue',
      zipcode: '10025'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Navy Blue' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77789', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1021,
    hiredate: ISODate("1981-11-04T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ '020-25420200', Long("9822336644") ],
    skills: { languages: [ 'C++', 'JAVA' ], web: [ 'php', 'java', 'jquery' ] }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0f"),
    empid: 1044,
    ename: 'rudra',
    address: {
      building: '18',
      coord: [ -73.996984, 40.72589 ],
      street: 'West Houston Street',
      zipcode: '10012'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lime' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '55543', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1021,
    hiredate: ISODate("1981-11-04T00:00:00.000Z"),
    sal: 2400,
    comm: null,
    deptno: 50,
    phone: '020-25420212',
    skills: {
      web: [ 'php', 'java', 'jquery' ],
      database: [ 'oracle', 'ms-sql server', 'mongodb' ]
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a10"),
    empid: 1045,
    ename: 'pankaj',
    address: {
      building: '531',
      coord: [ -73.9634876, 40.6940001 ],
      street: 'Myrtle Avenue',
      zipcode: '11205'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'Peach' ],
    cards: [
      { aadhar: { 'aadhar-No': '55565', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1023,
    hiredate: ISODate("1980-02-17T00:00:00.000Z"),
    sal: 3600,
    comm: null,
    deptno: 40,
    phone: '022-2548345',
    skills: { language: '.NET', database: 'ms-sql server' }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a11"),
    empid: 1038,
    ename: 'neel',
    address: {
      building: '284',
      coord: [ -73.9829239, 40.6580753 ],
      street: 'Prospect Park West',
      zipcode: '11215'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '00098', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1030,
    hiredate: ISODate("1983-03-14T00:00:00.000Z"),
    sal: 4200,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a12"),
    empid: 1046,
    ename: 'anoop',
    address: {
      building: '103-05',
      coord: [ -73.8642349, 40.75356 ],
      street: '37 Avenue',
      zipcode: '11368'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Navy Blue' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '83722', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1029,
    hiredate: ISODate("1980-02-17T00:00:00.000Z"),
    sal: 2300,
    comm: 1200,
    deptno: 50,
    phone: '022-2548345',
    skills: {
      language: [ '.NET', 'java' ],
      database: 'oracle',
      web: [ 'json', 'jquery', 'javascript' ]
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a13"),
    empid: 1049,
    ename: 'arjun',
    address: {
      building: '107',
      coord: [ -74.00920839999999, 40.7132925 ],
      street: 'Church Street',
      zipcode: '10007'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Sky Blue', 'Navy Blue', 'Blue' ],
    fruit: [ 'Lychee' ],
    cards: [
      { aadhar: { 'aadhar-No': '55434', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'auditor',
    mgr: 1020,
    hiredate: ISODate("1984-05-05T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    hra: 1500,
    da: 1200,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a14"),
    empid: 1050,
    ename: 'amol',
    address: {
      building: '1006',
      coord: [ -73.84856870000002, 40.8903781 ],
      street: 'East 233 Street',
      zipcode: '10466'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [ 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '44445', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'auditor',
    mgr: 1047,
    hiredate: ISODate("1984-05-06T00:00:00.000Z"),
    sal: 3800,
    comm: null,
    hra: 1000,
    da: 900,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a15"),
    empid: 1047,
    ename: 'nitish',
    address: {
      building: '60',
      coord: [ -74.0085357, 40.70620539999999 ],
      street: 'Wall Street',
      zipcode: '10005'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Coral', 'Cream' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '99890', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1039,
    hiredate: ISODate("1980-03-14T00:00:00.000Z"),
    sal: 1300,
    comm: 1200,
    deptno: 50,
    phone: '022-2548345',
    skills: {
      language: [ '.NET', 'java' ],
      database: { rdbms: [ 'oracle', 'db2' ], nosql: [ 'mongodb', 'hive' ] },
      web: [ 'json', 'jquery', 'javascript', 'php' ]
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a16"),
    empid: 1051,
    ename: 'sangita',
    address: {
      building: '56',
      coord: [ -73.991495, 40.692273 ],
      street: 'Court Street',
      zipcode: '11201'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'Papaya' ],
    cards: [
      { aadhar: { 'aadhar-No': '99983', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'auditor',
    mgr: 1040,
    hiredate: ISODate("1984-03-30T00:00:00.000Z"),
    sal: 3100,
    comm: null,
    hra: 1000,
    da: 1500,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a17"),
    empid: 1053,
    ename: 'sita',
    address: {
      building: '120',
      coord: [ -73.9998042, 40.7251256 ],
      street: 'Prince Street',
      zipcode: '10012'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [ 'Guava' ],
    cards: [
      { aadhar: { 'aadhar-No': '12233', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'writer',
    language: [ 'english', 'hindi', 'marathi' ],
    mgr: 1049,
    hiredate: ISODate("1984-03-30T00:00:00.000Z"),
    sal: 3755,
    comm: 750,
    hra: 1100,
    da: 1100,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a18"),
    empid: 1052,
    ename: 'gita',
    address: {
      building: '7615',
      coord: [ -74.0228449, 40.6281815 ],
      street: '5 Avenue',
      zipcode: '11209'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Kiwi' ],
    cards: [
      { aadhar: { 'aadhar-No': '44460', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'writer',
    language: [ 'english', 'hindi' ],
    mgr: 1049,
    hiredate: ISODate("1984-03-29T00:00:00.000Z"),
    sal: 2150,
    comm: 750,
    hra: 1300,
    da: 1700,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a19"),
    empid: 2001,
    ename: 'pinky',
    address: {
      building: '1236',
      coord: [ -73.8893654, 40.81376179999999 ],
      street: '238 Spofford Ave',
      zipcode: '10474'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'banana', 'Jackfruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '33434', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 1039,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1a"),
    empid: 1048,
    ename: 'neel',
    address: {
      building: '195',
      coord: [ -73.9246028, 40.6522396 ],
      street: 'East   56 Street',
      zipcode: '11203'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '99099', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1039,
    hiredate: ISODate("1980-03-14T00:00:00.000Z"),
    sal: 1800,
    comm: 1400,
    deptno: 50,
    phone: '022-2534565',
    skills: {
      language: 'ruby',
      database: {
        rdbms: [ 'oracle', 'db2' ],
        nosql: [ 'mongodb', 'hive', 'hbase' ]
      }
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1b"),
    empid: 2003,
    ename: 'supriya',
    address: {
      building: '1069',
      coord: [ -73.902463, 40.694924 ],
      street: 'Wyckoff Avenue',
      zipcode: '11385'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '33343', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2001,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1c"),
    empid: 2004,
    ename: 'sangu',
    address: {
      building: '405',
      coord: [ -73.97534999999999, 40.7516269 ],
      street: 'Lexington Avenue',
      zipcode: '10174'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green' ],
    fruit: [ 'Passion Fruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '33321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2002,
    hiredate: ISODate("1980-07-17T00:00:00.000Z"),
    sal: 6000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1d"),
    empid: 2005,
    ename: 'laxman',
    address: {
      building: '2491',
      coord: [ -74.1459332, 40.6103714 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '76565', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01'
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2001,
    hiredate: ISODate("1980-11-17T00:00:00.000Z"),
    sal: 6500,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1e"),
    empid: 2006,
    ename: 'rahsmi',
    address: {
      building: '7905',
      coord: [ -73.8740217, 40.7135015 ],
      street: 'Metropolitan Avenue',
      zipcode: '11379'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [ 'Peach' ],
    cards: [
      { aadhar: { 'aadhar-No': '77625', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2002,
    hiredate: ISODate("1982-05-17T00:00:00.000Z"),
    sal: 5600,
    comm: null,
    deptno: 30
  }
]
Type "it" for more
primaryDB> it
[
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1f"),
    empid: 2008,
    ename: 'roselin',
    address: {
      building: '1418',
      coord: [ -73.95685019999999, 40.7753401 ],
      street: 'Third Avenue',
      zipcode: '10028'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'watermelon', 'mango' ],
    cards: [
      { aadhar: { 'aadhar-No': '22223', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2005,
    hiredate: ISODate("1983-02-17T00:00:00.000Z"),
    sal: 800,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a20"),
    empid: 2007,
    ename: 'raj',
    address: {
      building: '87-69',
      coord: [ -73.8309503, 40.7001121 ],
      street: 'Lefferts Boulevard',
      zipcode: '11418'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Dark Orange' ],
    fruit: [ 'Papaya' ],
    cards: [
      { aadhar: { 'aadhar-No': '87767', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 1039,
    hiredate: ISODate("1981-08-17T00:00:00.000Z"),
    sal: 7000,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a21"),
    empid: 2002,
    ename: 'priti',
    address: {
      building: '625',
      coord: [ -73.990494, 40.7569545 ],
      street: '8 Avenue',
      zipcode: '10018'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '55565', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 1037,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 5500,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a22"),
    empid: 2012,
    ename: 'rupal',
    address: {
      building: '1111',
      coord: [ -74.0796436, 40.59878339999999 ],
      street: 'Hylan Boulevard',
      zipcode: '10305'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [ 'grapes' ],
    cards: [
      { aadhar: { 'aadhar-No': '12374', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 1037,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 6500,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a23"),
    empid: 2011,
    ename: 'snehal',
    address: {
      building: '1031',
      coord: [ -73.9075537, 40.6438684 ],
      street: 'East   92 Street',
      zipcode: '11236'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '66667', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 1039,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 2500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a24"),
    empid: 2009,
    ename: 'janhavi',
    address: {
      building: '464',
      coord: [ -73.9791458, 40.744328 ],
      street: '3 Avenue',
      zipcode: '10016'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [ 'Papaya' ],
    cards: [
      { aadhar: { 'aadhar-No': '11117', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2002,
    hiredate: ISODate("1983-08-17T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a25"),
    empid: 2013,
    ename: 'bandish',
    address: {
      building: '976',
      coord: [ -73.92701509999999, 40.6620192 ],
      street: 'Rutland Road',
      zipcode: '11212'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [ 'mango' ],
    cards: [
      { aadhar: { 'aadhar-No': '93710', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01'
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 7000,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a26"),
    empid: 2014,
    ename: 'madhavi',
    address: {
      building: '148',
      coord: [ -73.9806854, 40.7778589 ],
      street: 'West   72 Street',
      zipcode: '10023'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green' ],
    fruit: [ 'mango' ],
    cards: [
      { aadhar: { 'aadhar-No': '00900', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2002,
    hiredate: ISODate("1980-07-17T00:00:00.000Z"),
    sal: 6900,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a27"),
    empid: 2015,
    ename: 'ram',
    address: {
      building: '364',
      coord: [ -73.96084119999999, 40.8014307 ],
      street: 'West  110 Street',
      zipcode: '10025'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'cherry', 'grapes' ],
    cards: [
      { aadhar: { 'aadhar-No': '00600', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1980-11-17T00:00:00.000Z"),
    sal: 6200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a28"),
    empid: 2016,
    ename: 'aditi',
    address: {
      building: '1423',
      coord: [ -73.9615132, 40.6253268 ],
      street: 'Avenue J',
      zipcode: '11230'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [ 'lime', 'Guava' ],
    cards: [
      { aadhar: { 'aadhar-No': '88788', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2002,
    hiredate: ISODate("1982-05-17T00:00:00.000Z"),
    sal: 5700,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a29"),
    empid: 2010,
    ename: 'jasu',
    address: {
      building: '437',
      coord: [ -73.975393, 40.757365 ],
      street: 'Madison Avenue',
      zipcode: '10022'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lawn Green' ],
    fruit: [ 'Fig', 'apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '44446', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2007,
    hiredate: ISODate("1983-04-17T00:00:00.000Z"),
    sal: 5800,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2a"),
    empid: 2020,
    ename: 'tanvi',
    address: {
      building: '203',
      coord: [ -74.15235919999999, 40.5563756 ],
      street: 'Giffords Lane',
      zipcode: '10308'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Lawn Green' ],
    fruit: [ 'Avocado' ],
    cards: [
      { aadhar: { 'aadhar-No': '87828', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01'
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2007,
    hiredate: ISODate("1983-04-17T00:00:00.000Z"),
    sal: 5700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2b"),
    empid: 2019,
    ename: 'zara',
    address: {
      building: '277',
      coord: [ -73.8941893, 40.8634684 ],
      street: 'East Kingsbridge Road',
      zipcode: '10458'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [ 'Dragon Fruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '73878', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2002,
    hiredate: ISODate("1983-08-17T00:00:00.000Z"),
    sal: 3700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2c"),
    empid: 2017,
    ename: 'neeraj',
    address: {
      building: '0',
      coord: [ -84.2040813, 9.9986585 ],
      street: 'Guardia Airport Parking',
      zipcode: '11371'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Dark Orange' ],
    fruit: [ 'pineapple' ],
    cards: [
      { aadhar: { 'aadhar-No': '55475', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 1039,
    hiredate: ISODate("1981-08-17T00:00:00.000Z"),
    sal: 7700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2d"),
    empid: 2021,
    ename: 'Emma',
    address: {
      building: '2031',
      coord: [ -78.15235919457, 47.5568756 ],
      street: 'Giffords Lane',
      zipcode: '11309'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Lawn Green', 'Sky Blue' ],
    fruit: [ 'Avocado', 'Grapes', 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '02920', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1982-04-17T00:00:00.000Z"),
    sal: 7700,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2e"),
    empid: 2023,
    ename: 'Olivia',
    address: {
      building: '031',
      coord: [ -78.15231429456999, 42.5560956 ],
      street: 'Hazel Grove',
      zipcode: '133038'
    },
    isDocActive: true,
    gender: 'female',
    canVote: false,
    canDrive: true,
    color: [ 'Lawn Green', 'Sky Blue' ],
    fruit: [ 'Banana', 'Grapes', 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '23435', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1981-06-17T00:00:00.000Z"),
    sal: 9000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2f"),
    empid: 2022,
    ename: 'Emma',
    address: {
      building: '2031',
      coord: [ -78.15235919457, 47.5568756 ],
      street: 'Keesey Street',
      zipcode: '11310'
    },
    isDocActive: false,
    gender: 'female',
    canVote: false,
    canDrive: true,
    color: [ 'Lawn Green', 'Sky Blue' ],
    fruit: [ 'Avocado', 'Grapes', 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '23232', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1982-08-17T00:00:00.000Z"),
    sal: 7000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a30"),
    empid: 2018,
    ename: 'meera',
    address: {
      building: '73',
      coord: [ -74.1178949, 40.5734906 ],
      street: 'New Dorp Plaza',
      zipcode: '10306'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'watermelon' ],
    cards: [
      { aadhar: { 'aadhar-No': '92832', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2005,
    hiredate: ISODate("1983-02-17T00:00:00.000Z"),
    sal: 801,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a31"),
    empid: 2025,
    ename: 'Emily',
    address: {
      building: '7036',
      coord: [ -78.15299819456999, 40.5568756 ],
      street: 'Adams Row',
      zipcode: '15310'
    },
    isDocActive: false,
    gender: 'female',
    canVote: false,
    canDrive: false,
    color: [ 'Yellow' ],
    fruit: [ 'Grapes' ],
    cards: [
      { aadhar: { 'aadhar-No': '75463', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2004,
    hiredate: ISODate("1981-04-19T00:00:00.000Z"),
    sal: 7600,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a32"),
    empid: 2024,
    ename: 'Mia',
    address: {
      building: '032',
      coord: [ -78.15235919457, 43.5578756 ],
      street: 'Kidd Cottages',
      zipcode: '33038'
    },
    isDocActive: false,
    gender: 'female',
    canVote: false,
    canDrive: true,
    color: [ 'Light Pink', 'Light Blue' ],
    fruit: [ 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '64434', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1983-04-17T00:00:00.000Z"),
    sal: 9500,
    comm: null,
    deptno: 10
  }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$match:{job:"manager"}}])
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  }
]
primaryDB> db.Emp.aggregate([{$match:{job:"manager"}}])
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  }
]
primaryDB> db.Emp.find();
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f7"),
    empid: 1023,
    ename: 'jack',
    address: {
      building: '2780',
      coord: [ -73.98241999999999, 40.579505 ],
      street: 'Stillwell Avenue',
      zipcode: '11224'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Air Force Blue', 'Apple Green' ],
    fruit: [ 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'accountant',
    mgr: 1022,
    hiredate: ISODate("1981-04-02T00:00:00.000Z"),
    sal: 2700,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fa"),
    empid: 1023,
    ename: 'scott',
    address: {
      building: '97-22',
      coord: [ -73.8601152, 40.7311739 ],
      street: '63 Road',
      zipcode: '11374'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Ash Grey', 'White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93872', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-28T00:00:00.000Z"),
    sal: 2500,
    comm: 350,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fb"),
    empid: 1024,
    ename: 'martin',
    address: {
      building: '8825',
      coord: [ -73.8803827, 40.7643124 ],
      street: 'Astoria Boulevard',
      zipcode: '11369'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Banana Yellow' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '72877', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-02-20T00:00:00.000Z"),
    sal: 2900,
    comm: 735,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fc"),
    empid: 1025,
    ename: 'crow',
    address: {
      building: '2206',
      coord: [ -74.1377286, 40.6119572 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green', 'Ash Grey' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77876', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-08T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fd"),
    empid: 1027,
    ename: 'richards',
    address: {
      building: '6409',
      coord: [ -74.00528899999999, 40.628886 ],
      street: '11 Avenue',
      zipcode: '11219'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Charcoal', 'Cherry' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '83972', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-02-22T00:00:00.000Z"),
    sal: 1500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fe"),
    empid: 1026,
    ename: 'blake',
    address: {
      building: '7114',
      coord: [ -73.9068506, 40.6199034 ],
      street: 'Avenue U',
      zipcode: '11234'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brass', 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989ff"),
    empid: 1020,
    ename: 'king',
    address: {
      building: '1007',
      coord: [ -73.856077, 40.848447 ],
      street: 'Morris Park Ave',
      zipcode: '10462'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'blue', 'black' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93478', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'president',
    mgr: null,
    hiredate: ISODate("1981-11-17T00:00:00.000Z"),
    sal: 5000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a00"),
    empid: 1028,
    ename: 'peter',
    address: {
      building: '1839',
      coord: [ -73.9482609, 40.6408271 ],
      street: 'Nostrand Avenue',
      zipcode: '11226'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brown' ],
    fruit: [ 'banana', 'Jackfruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '92783', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1025,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a01"),
    empid: 1031,
    ename: 'sharmin',
    address: {
      building: '1269',
      coord: [ -73.871194, 40.6730975 ],
      street: 'Sutter Avenue',
      zipcode: '11208'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Cream' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '16523', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1983-01-12T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a02"),
    empid: 1032,
    ename: 'vrushali',
    address: {
      building: '1',
      coord: [ -73.96926909999999, 40.7685235 ],
      street: 'East   66 Street',
      zipcode: '10065'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Iceberg' ],
    fruit: [ 'Orange', 'Papaya', 'Kiwi' ],
    cards: [
      { aadhar: { 'aadhar-No': '22343', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1030,
    hiredate: ISODate("1982-02-23T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a03"),
    empid: 1033,
    ename: 'vasant',
    address: {
      building: '705',
      coord: [ -73.9653967, 40.6064339 ],
      street: 'Kings Highway',
      zipcode: '11223'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93824', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1982-02-24T00:00:00.000Z"),
    sal: 2200,
    comm: 0,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a05"),
    empid: 1034,
    ename: 'vasu',
    address: {
      building: '203',
      coord: [ -73.97822040000001, 40.6435254 ],
      street: 'Church Avenue',
      zipcode: '11218'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'Dates' ],
    cards: [
      { aadhar: { 'aadhar-No': '19826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1980-02-14T00:00:00.000Z"),
    sal: 2200,
    comm: 250,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a06"),
    empid: 1035,
    ename: 'rahul',
    address: {
      building: '265-15',
      coord: [ -73.7032601, 40.7386417 ],
      street: 'Hillside Avenue',
      zipcode: '11004'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Lychee', 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '00998', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1029,
    hiredate: ISODate("1981-12-31T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a07"),
    empid: 1036,
    ename: 'raju',
    address: {
      building: '6909',
      coord: [ -74.0259567, 40.6353674 ],
      street: '3 Avenue',
      zipcode: '11209'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Yellow' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '55622', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1031,
    hiredate: ISODate("1983-06-15T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a08"),
    empid: 1030,
    ename: 'saleel',
    address: {
      building: '7715',
      coord: [ -73.9973325, 40.61174889999999 ],
      street: '18 Avenue',
      zipcode: '11214'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Coral' ],
    fruit: [ 'Dates', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '73822', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 2900,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a09"),
    empid: 1037,
    ename: 'ramu',
    address: {
      building: '522',
      coord: [ -73.95171, 40.767461 ],
      street: 'East   74 Street',
      zipcode: '10021'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lemon' ],
    fruit: [ 'Jackfruit', 'banana', 'Apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '00983', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1031,
    hiredate: ISODate("1983-07-12T00:00:00.000Z"),
    sal: 1400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0a"),
    empid: 1040,
    ename: 'amit',
    address: {
      building: '759',
      coord: [ -73.9925306, 40.7309346 ],
      street: 'Broadway',
      zipcode: '10003'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '66623', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1029,
    hiredate: ISODate("1982-12-08T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ 85088422, Long("9822884228") ]
  }
]
Type "it" for more
primaryDB> edit db.Emp.aggregate([{$match:{job:"manager"}}])
Opening an editor...

primaryDB> edit db.Emp.aggregate([{$match:{job:"manager"}}])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:79)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }])
    |                                                                                ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]);
Uncaught:
SyntaxError: Unexpected token, expected "," (1:79)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]);
    |                                                                                ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:78)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}])
    |                                                                               ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:78)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}}])
    |                                                                               ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}])
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fa"),
    empid: 1023,
    ename: 'scott',
    address: {
      building: '97-22',
      coord: [ -73.8601152, 40.7311739 ],
      street: '63 Road',
      zipcode: '11374'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Ash Grey', 'White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93872', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-28T00:00:00.000Z"),
    sal: 2500,
    comm: 350,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fb"),
    empid: 1024,
    ename: 'martin',
    address: {
      building: '8825',
      coord: [ -73.8803827, 40.7643124 ],
      street: 'Astoria Boulevard',
      zipcode: '11369'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Banana Yellow' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '72877', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-02-20T00:00:00.000Z"),
    sal: 2900,
    comm: 735,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fc"),
    empid: 1025,
    ename: 'crow',
    address: {
      building: '2206',
      coord: [ -74.1377286, 40.6119572 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green', 'Ash Grey' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77876', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-08T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a03"),
    empid: 1033,
    ename: 'vasant',
    address: {
      building: '705',
      coord: [ -73.9653967, 40.6064339 ],
      street: 'Kings Highway',
      zipcode: '11223'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93824', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1982-02-24T00:00:00.000Z"),
    sal: 2200,
    comm: 0,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a05"),
    empid: 1034,
    ename: 'vasu',
    address: {
      building: '203',
      coord: [ -73.97822040000001, 40.6435254 ],
      street: 'Church Avenue',
      zipcode: '11218'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'Dates' ],
    cards: [
      { aadhar: { 'aadhar-No': '19826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1980-02-14T00:00:00.000Z"),
    sal: 2200,
    comm: 250,
    deptno: 40
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:sal}}])
ReferenceError: sal is not defined
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:$sal}}])
ReferenceError: $sal is not defined
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:1}}])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager'
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager'
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager'
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:'$sal'}}])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200
  }
]
primaryDB> edit db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:'$sal',"New Salary":  }}])
Opening an editor...

primaryDB> edit db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:'$sal',"New Salary":  }}])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: [10, 20] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'New Salary': 30
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'New Salary': 30
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'New Salary': 30
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'New Salary': 30
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'New Salary': 30
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 30
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'New Salary': 30
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 30
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'New Salary': 3475
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'New Salary': 4775
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'New Salary': 2575
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'New Salary': 2975
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'New Salary': 3275
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'New Salary': 4975
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'New Salary': 3475
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'New Salary': 4775
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'New Salary': 2575
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'New Salary': 2975
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'New Salary': 3275
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'New Salary': 4975
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  }
]
primaryDB> edit db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
Opening an editor...

primaryDB> edit db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com' "Gross Salary":{ $add : ["$sal","$comm"] } "New Salary": { $multiply: ["$sal", 75] } } }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:192)

> 1 | db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com' "Gross Salary":{ $add : ["$sal","$comm"] } "New Salary": { $multiply: ["$sal", 75] } } }])
    |                                                                                                                                                                                                 ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'Gross Salary': null,
    'New Salary': 255000
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'Gross Salary': null,
    'New Salary': 352500
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'Gross Salary': 2850,
    'New Salary': 187500
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'Gross Salary': 3635,
    'New Salary': 217500
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'Gross Salary': null,
    'New Salary': 240000
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2200,
    'New Salary': 165000
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'Gross Salary': null,
    'New Salary': 367500
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2450,
    'New Salary': 165000
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] },x:{$multiply:[{$ad :[10,20]},7]} } }])
MongoServerError: Invalid $project :: caused by :: Unrecognized expression '$ad'
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] },x:{$multiply:[{$add :[10,20]},7]} } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'Gross Salary': null,
    'New Salary': 255000,
    x: 210
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'Gross Salary': null,
    'New Salary': 352500,
    x: 210
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'Gross Salary': 2850,
    'New Salary': 187500,
    x: 210
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'Gross Salary': 3635,
    'New Salary': 217500,
    x: 210
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'Gross Salary': null,
    'New Salary': 240000,
    x: 210
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2200,
    'New Salary': 165000,
    x: 210
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'Gross Salary': null,
    'New Salary': 367500,
    x: 210
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2450,
    'New Salary': 165000,
    x: 210
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] },x:{$multiply:[{$add :[10,20]},7]} } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'Gross Salary': null,
    'New Salary': 255000,
    x: 210
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'Gross Salary': null,
    'New Salary': 352500,
    x: 210
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'Gross Salary': 2850,
    'New Salary': 187500,
    x: 210
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'Gross Salary': 3635,
    'New Salary': 217500,
    x: 210
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'Gross Salary': null,
    'New Salary': 240000,
    x: 210
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2200,
    'New Salary': 165000,
    x: 210
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'Gross Salary': null,
    'New Salary': 367500,
    x: 210
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2450,
    'New Salary': 165000,
    x: 210
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:{'$salary','$commission'}}}}])
Uncaught:
SyntaxError: Unexpected token (1:181)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:{'$salary','$commission'}}}}])
    |                                                                                                                                                                                      ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:['$salary','$commission']}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    salary: 3400,
    commission: null,
    x: null
  },
  {
    ename: 'james',
    job: 'manager',
    salary: 4700,
    commission: null,
    x: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    salary: 2500,
    commission: 350,
    x: 2850
  },
  {
    ename: 'martin',
    job: 'salesman',
    salary: 2900,
    commission: 735,
    x: 3635
  },
  {
    ename: 'crow',
    job: 'salesman',
    salary: 3200,
    commission: null,
    x: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    salary: 2200,
    commission: 0,
    x: 2200
  },
  {
    ename: 'bob',
    job: 'manager',
    salary: 4900,
    commission: null,
    x: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    salary: 2200,
    commission: 250,
    x: 2450
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:['$salary','$commission']},}},{$addFields :{y:{$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    salary: 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    salary: 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    salary: 2500,
    commission: 350,
    x: 2850,
    y: 5700
  },
  {
    ename: 'martin',
    job: 'salesman',
    salary: 2900,
    commission: 735,
    x: 3635,
    y: 7270
  },
  {
    ename: 'crow',
    job: 'salesman',
    salary: 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    salary: 2200,
    commission: 0,
    x: 2200,
    y: 4400
  },
  {
    ename: 'bob',
    job: 'manager',
    salary: 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    salary: 2200,
    commission: 250,
    x: 2450,
    y: 4900
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:["$Gross Salary",'$commission']},}},{$addFields :{y:{$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    salary: 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    salary: 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    salary: 2500,
    commission: 350,
    x: null,
    y: null
  },
  {
    ename: 'martin',
    job: 'salesman',
    salary: 2900,
    commission: 735,
    x: null,
    y: null
  },
  {
    ename: 'crow',
    job: 'salesman',
    salary: 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    salary: 2200,
    commission: 0,
    x: null,
    y: null
  },
  {
    ename: 'bob',
    job: 'manager',
    salary: 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    salary: 2200,
    commission: 250,
    x: null,
    y: null
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,"Gross Salary":'$sal',commission:'$comm'}},{$addFields:{x:{$add:["$Gross Salary",'$commission']},}},{$addFields :{y:{$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    'Gross Salary': 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    'Gross Salary': 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    'Gross Salary': 2500,
    commission: 350,
    x: 2850,
    y: 5700
  },
  {
    ename: 'martin',
    job: 'salesman',
    'Gross Salary': 2900,
    commission: 735,
    x: 3635,
    y: 7270
  },
  {
    ename: 'crow',
    job: 'salesman',
    'Gross Salary': 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 0,
    x: 2200,
    y: 4400
  },
  {
    ename: 'bob',
    job: 'manager',
    'Gross Salary': 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 250,
    x: 2450,
    y: 4900
  }
]
primaryDB> db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:49)

> 1 | db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}])
    |                                                  ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
... db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
Uncaught:
SyntaxError: Invalid shorthand property initializer. (1:33)

> 1 | db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
    |                                  ^
  2 | db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
  3 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,sal:1,comm:1} }])
[
  { sal: 2700, comm: null },
  { sal: 3400, comm: null },
  { sal: 4700, comm: null },
  { sal: 2500, comm: 350 },
  { sal: 2900, comm: 735 },
  { sal: 3200, comm: null },
  { sal: 1500, comm: null },
  { sal: 1200, comm: null },
  { sal: 5000, comm: null },
  { sal: 3500, comm: null },
  { sal: 4999, comm: null },
  { sal: 4999, comm: null },
  { sal: 2200, comm: 0 },
  { sal: 4900, comm: null },
  { sal: 2200, comm: 250 },
  { sal: 1200, comm: null },
  { sal: 3400, comm: null },
  { sal: 2900, comm: null },
  { sal: 1400, comm: null },
  { sal: 3500, comm: null }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1} }])
[
  { ename: 'jack', sal: 2700, comm: null },
  { ename: 'smith', sal: 3400, comm: null },
  { ename: 'james', sal: 4700, comm: null },
  { ename: 'scott', sal: 2500, comm: 350 },
  { ename: 'martin', sal: 2900, comm: 735 },
  { ename: 'crow', sal: 3200, comm: null },
  { ename: 'richards', sal: 1500, comm: null },
  { ename: 'blake', sal: 1200, comm: null },
  { ename: 'king', sal: 5000, comm: null },
  { ename: 'peter', sal: 3500, comm: null },
  { ename: 'sharmin', sal: 4999, comm: null },
  { ename: 'vrushali', sal: 4999, comm: null },
  { ename: 'vasant', sal: 2200, comm: 0 },
  { ename: 'bob', sal: 4900, comm: null },
  { ename: 'vasu', sal: 2200, comm: 250 },
  { ename: 'rahul', sal: 1200, comm: null },
  { ename: 'raju', sal: 3400, comm: null },
  { ename: 'saleel', sal: 2900, comm: null },
  { ename: 'ramu', sal: 1400, comm: null },
  { ename: 'amit', sal: 3500, comm: null }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} }])
[
  { ename: 'jack', sal: 2700, comm: null, 'Upper Names': 'JACK' },
  { ename: 'smith', sal: 3400, comm: null, 'Upper Names': 'SMITH' },
  { ename: 'james', sal: 4700, comm: null, 'Upper Names': 'JAMES' },
  { ename: 'scott', sal: 2500, comm: 350, 'Upper Names': 'SCOTT' },
  { ename: 'martin', sal: 2900, comm: 735, 'Upper Names': 'MARTIN' },
  { ename: 'crow', sal: 3200, comm: null, 'Upper Names': 'CROW' },
  {
    ename: 'richards',
    sal: 1500,
    comm: null,
    'Upper Names': 'RICHARDS'
  },
  { ename: 'blake', sal: 1200, comm: null, 'Upper Names': 'BLAKE' },
  { ename: 'king', sal: 5000, comm: null, 'Upper Names': 'KING' },
  { ename: 'peter', sal: 3500, comm: null, 'Upper Names': 'PETER' },
  { ename: 'sharmin', sal: 4999, comm: null, 'Upper Names': 'SHARMIN' },
  {
    ename: 'vrushali',
    sal: 4999,
    comm: null,
    'Upper Names': 'VRUSHALI'
  },
  { ename: 'vasant', sal: 2200, comm: 0, 'Upper Names': 'VASANT' },
  { ename: 'bob', sal: 4900, comm: null, 'Upper Names': 'BOB' },
  { ename: 'vasu', sal: 2200, comm: 250, 'Upper Names': 'VASU' },
  { ename: 'rahul', sal: 1200, comm: null, 'Upper Names': 'RAHUL' },
  { ename: 'raju', sal: 3400, comm: null, 'Upper Names': 'RAJU' },
  { ename: 'saleel', sal: 2900, comm: null, 'Upper Names': 'SALEEL' },
  { ename: 'ramu', sal: 1400, comm: null, 'Upper Names': 'RAMU' },
  { ename: 'amit', sal: 3500, comm: null, 'Upper Names': 'AMIT' }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}}])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:133)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
    |                                                                                                                                      ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:133)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
    |                                                                                                                                      ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ,}])
Uncaught:
SyntaxError: Unexpected token (1:134)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ,}])
    |                                                                                                                                       ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}}])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:133)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
    |                                                                                                                                      ^
  2 |

primaryDB> edit db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,"Gross Salary":'$sal',commission:'$comm'}},{$addFields:{x:{$add:["$Gross Salary",'$commission']},}},{$addFields :{y:{$multi$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    'Gross Salary': 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    'Gross Salary': 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    'Gross Salary': 2500,
    commission: 350,
    x: 2850,
    y: 5700
  },
  {
    ename: 'martin',
    job: 'salesman',
    'Gross Salary': 2900,
    commission: 735,
    x: 3635,
    y: 7270
  },
  {
    ename: 'crow',
    job: 'salesman',
    'Gross Salary': 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 0,
    x: 2200,
    y: 4400
  },
  {
    ename: 'bob',
    job: 'manager',
    'Gross Salary': 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 250,
    x: 2450,
    y: 4900
  }
]
primaryDB> edit db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } }} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:158)

> 1 | db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } }} }])
    |                                                                                                                                                               ^
  2 |

primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> edit db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifNull: ['$comm', 0] } } }])
[
  { ename: 'jack', sal: 2700, comm: null, 'Upper Names': 'JACK', x: 0 },
  {
    ename: 'smith',
    sal: 3400,
    comm: null,
    'Upper Names': 'SMITH',
    x: 0
  },
  {
    ename: 'james',
    sal: 4700,
    comm: null,
    'Upper Names': 'JAMES',
    x: 0
  },
  {
    ename: 'scott',
    sal: 2500,
    comm: 350,
    'Upper Names': 'SCOTT',
    x: 350
  },
  {
    ename: 'martin',
    sal: 2900,
    comm: 735,
    'Upper Names': 'MARTIN',
    x: 735
  },
  { ename: 'crow', sal: 3200, comm: null, 'Upper Names': 'CROW', x: 0 },
  {
    ename: 'richards',
    sal: 1500,
    comm: null,
    'Upper Names': 'RICHARDS',
    x: 0
  },
  {
    ename: 'blake',
    sal: 1200,
    comm: null,
    'Upper Names': 'BLAKE',
    x: 0
  },
  { ename: 'king', sal: 5000, comm: null, 'Upper Names': 'KING', x: 0 },
  {
    ename: 'peter',
    sal: 3500,
    comm: null,
    'Upper Names': 'PETER',
    x: 0
  },
  {
    ename: 'sharmin',
    sal: 4999,
    comm: null,
    'Upper Names': 'SHARMIN',
    x: 0
  },
  {
    ename: 'vrushali',
    sal: 4999,
    comm: null,
    'Upper Names': 'VRUSHALI',
    x: 0
  },
  {
    ename: 'vasant',
    sal: 2200,
    comm: 0,
    'Upper Names': 'VASANT',
    x: 0
  },
  { ename: 'bob', sal: 4900, comm: null, 'Upper Names': 'BOB', x: 0 },
  {
    ename: 'vasu',
    sal: 2200,
    comm: 250,
    'Upper Names': 'VASU',
    x: 250
  },
  {
    ename: 'rahul',
    sal: 1200,
    comm: null,
    'Upper Names': 'RAHUL',
    x: 0
  },
  { ename: 'raju', sal: 3400, comm: null, 'Upper Names': 'RAJU', x: 0 },
  {
    ename: 'saleel',
    sal: 2900,
    comm: null,
    'Upper Names': 'SALEEL',
    x: 0
  },
  { ename: 'ramu', sal: 1400, comm: null, 'Upper Names': 'RAMU', x: 0 },
  { ename: 'amit', sal: 3500, comm: null, 'Upper Names': 'AMIT', x: 0 }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifNull: ['$comm', 0] } } }])Microsoft Windows [Version 10.0.19044.1706]
(c) Microsoft Corporation. All rights reserved.

C:\Users\DELL>mongosh --host=localhost --port=27017
Current Mongosh Log ID: 62918c256de7438fdd3f6c7d
Connecting to:          mongodb://localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.4.2
Using MongoDB:          5.0.8
Using Mongosh:          1.4.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting:
   2022-05-27T20:53:45.650+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

Warning: Found ~/.mongorc.js, but not ~/.mongoshrc.js. ~/.mongorc.js will not be loaded.
  You may want to copy or rename ~/.mongorc.js to ~/.mongoshrc.js.
test> use primaryDB
switched to db primaryDB
primaryDB> sho dbs;
Uncaught:
SyntaxError: Missing semicolon. (1:3)

> 1 | sho dbs;
    |    ^
  2 |

primaryDB> show dbs;
admin       40.00 KiB
config      36.00 KiB
local       72.00 KiB
primaryDB  272.00 KiB
primaryDB> show tables;
Book1
Books
Dept
emp
Emp
primaryDB> edit
Opening an editor...

primaryDB> edit
Opening an editor...

primaryDB> db.emp.find();
[
  {
    _id: ObjectId("62909edda9fd08e69f1af61c"),
    EMPNO: '6001\tGITA\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t30\t1\tGITA\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61d"),
    EMPNO: '7369\tSMITH\tM\tCLERK\t7902\t1980-12-17\t800\t\\N\t20\t2\tTRITONE\ta12recmpm\t7032300023\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61e"),
    EMPNO: '7415\tAARAV\tM\tCLERK\t7902\t1981-12-31\t3350\t\\N\t10\t\\N\tAARAV\t\\N\t7032300084\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61f"),
    EMPNO: '7421\tTHOMAS\tM\tCLERK\t7920\t1981-07-19\t1750\t\\N\t10\t1\tTHOMAS\tr50mpm\t7032300011\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af620"),
    EMPNO: '7499\tALLEN\tM\tSALESMAN\t7698\t1981-02-20\t1600\t300\t30\t4\tALWAYS TESTE\tsales@2017\t7032300096\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af621"),
    EMPNO: '7521\tWARD\tM\tSALESMAN\t7698\t1981-02-22\t1250\t500\t30\t1\tWARD\tsales@2017\t7132300034\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af622"),
    EMPNO: '6129\tVRUSHALI\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t50\t1\tVRUSHALI\tPUN@8877\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af623"),
    EMPNO: '6473\tSHARMIN\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tSHARMIN\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af624"),
    EMPNO: '6781\tBANDISH\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tBANDISH\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af625"),
    EMPNO: '7566\tJONES\tM\tMANAGER\t7839\t1981-04-02\t2975\t\\N\t20\t4\tHONEYCOMB\ta12recmpm\t7132300039\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af626"),
    EMPNO: '7698\tBLAKE\tM\tMANAGER\t7839\t1981-05-01\t2850\t\\N\t30\t1\tBIG BEN\tsales@2017\t7132300027\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af627"),
    EMPNO: '7839\tKING\tM\tPRESIDENT\t\\N\t1981-11-17\t5000\t\\N\t10\t1\tKING\tr50mpm\t7132300081\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af628"),
    EMPNO: '7840\tFRED\tM\tvice PRESIDENT\t7839\t1983-08-09\t5000\t\\N\t20\t1\tSAND STONE\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af629"),
    EMPNO: '7844\tTURNER\tM\tSALESMAN\t7698\t1981-09-08\t1500\t0\t30\t5\tSAND DUST\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62a"),
    EMPNO: '7654\tMARTIN\tM\tSALESMAN\t7698\t1981-09-28\t1250\t1400\t30\t6\tLIFE RACER\tsales@2017\t7132300050\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62b"),
    EMPNO: '7782\tCLARK\tM\tMANAGER\t7839\t1981-06-09\t2450\t\\N\t10\t3\tCLARK\tr50mpm\t7032300001\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62c"),
    EMPNO: '7788\tSCOTT\tM\tANALYST\t7566\t1982-12-09\t3000\t\\N\t20\t3\tWHITE SAND\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62d"),
    EMPNO: '7876\tADAMS\tM\tCLERK\t7788\t1983-01-12\t1100\t\\N\t20\t1\tCRAZY ANYONE\ta12recmpm\t7132300086\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62e"),
    EMPNO: '7900\tJAMES\tM\tCLERK\t7698\t1981-12-03\t950\t\\N\t30\t2\tCRAZY LEADER\tsales@2017\t7132300042\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62f"),
    EMPNO: '7902\tFORD\tM\tANALYST\t7566\t1981-12-03\t3000\t\\N\t20\t4\tCONBRIO\ta12recmpm\t\\N\t0'
  }
]
Type "it" for more
primaryDB> db.getCollectionNames();
[ 'Book1', 'emp', 'Emp', 'Books', 'Dept' ]
primaryDB> db.createCollection('Student',{cappped:true,size:1000,max:2});
MongoServerError: BSON field 'create.cappped' is an unknown field.
primaryDB> db.createCollection('Student',{capped:true,size:1000,max:2});
{ ok: 1 }
primaryDB> db.getCollectionNames();
[ 'Book1', 'Student', 'emp', 'Emp', 'Books', 'Dept' ]
primaryDB> db.emp.isCapped();
false
primaryDB> db.Student.isCapped();
true
primaryDB> db.Student.insert({id:1,sname:"Tejas"});
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("62918d636e113dd7665684d2") }
}
primaryDB> db.Student.remove();
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
MongoshInvalidInputError: [COMMON-10001] Missing required argument at position 0 (Collection.remove)
primaryDB> db.Student.remove({});
{ acknowledged: true, deletedCount: 1 }
primaryDB> db.Student.insert({_id:1,sname:"Tejas"});
{ acknowledged: true, insertedIds: { '0': 1 } }
primaryDB> db.Student.find();
[ { _id: 1, sname: 'Tejas' } ]
primaryDB> db.Student.insert({_id:2,sname:"Tejas",isActive:true});
{ acknowledged: true, insertedIds: { '0': 2 } }
primaryDB> db.Student.find();
[
  { _id: 1, sname: 'Tejas' },
  { _id: 2, sname: 'Tejas', isActive: true }
]
primaryDB> db.Student.insert({_id:2,sname:"Tejas",isActive:false,salary:3000});
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Student index: _id_ dup key: { _id: 2 }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Student index: _id_ dup key: { _id: 2 }',
          errInfo: undefined,
          op: { _id: 2, sname: 'Tejas', isActive: false, salary: 3000 }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [ { index: 0, _id: 2 } ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Student.insert({_id:3,sname:"Tejas",isActive:false,salary:3000});
{ acknowledged: true, insertedIds: { '0': 3 } }
primaryDB> db.Student.find();
[
  { _id: 2, sname: 'Tejas', isActive: true },
  { _id: 3, sname: 'Tejas', isActive: false, salary: 3000 }
]
primaryDB> db.Student.insert({_id:4,sname:"Tejas4",isActive:false,salary:3000});
{ acknowledged: true, insertedIds: { '0': 4 } }
primaryDB> db.Student.find();
[
  { _id: 3, sname: 'Tejas', isActive: false, salary: 3000 },
  { _id: 4, sname: 'Tejas4', isActive: false, salary: 3000 }
]
primaryDB> db.createCollection('Person');
{ ok: 1 }
primaryDB> show tables;
Book1
Books
Dept
emp
Emp
Person
Student
primaryDB> db.getCollectionNames();
[
  'Book1', 'Student',
  'emp',   'Person',
  'Emp',   'Books',
  'Dept'
]
primaryDB> edit db.person.insertOne({_id:"Tejas",Name:"Tejas Jawale",City:"Nashik",State:"MH"})
Opening an editor...

primaryDB> edit db.person.insertOne({_id:"Tejas",Name:"Tejas Jawale",City:"Nashik",State:"MH"})
Opening an editor...

primaryDB> db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails { PassPortNo : "Tejas12101999", validity:"25 Years" } })
Uncaught:
SyntaxError: Unexpected token, expected "," (1:103)

> 1 | db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails { PassPortNo : "Tejas12101999", validity:"25 Years" } })
    |                                                                                                        ^
  2 |

primaryDB> edit db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails { PassPortNo : "Tejas12101999", validity:"25 Years" } })
Opening an editor...

primaryDB> db.person.insertOne({ _id: "Tejas", Name: "Tejas Jawale", City: "Nashik", State: "MH", PassPortDetails: { PassPortNo: "Tejas12101999", validity: "25 Years" } })
{ acknowledged: true, insertedId: 'Tejas' }
primaryDB> db.createCollection('Person1');
{ ok: 1 }
primaryDB> db.createCollection('PassPort');
{ ok: 1 }"MH", PassPortDetails: { PassPortNo: "Tejas12101999", validity: "25 Years"primaryDB> db.Person1.insertOne({_id:"Tejas",Name:"Tejas Jawale",City:"Nashik",State:"MH"})
{ acknowledged: true, insertedId: 'Tejas' }
primaryDB> db.Person1.find();
[ { _id: 'Tejas', Name: 'Tejas Jawale', City: 'Nashik', State: 'MH' } ]
primaryDB> db.Person1.insertOne({_id:"Tejas",PassPortNo:"Tejas1211099", validity:"25 Years"});
MongoServerError: E11000 duplicate key error collection: primaryDB.Person1 index: _id_ dup key: { _id: "Tejas" }
primaryDB> db.PassPort.insertOne({_id:"Tejas",PassPortNo:"Tejas1211099", validity:"25 Years"});
{ acknowledged: true, insertedId: 'Tejas' }
primaryDB> db.Person1.find();
[ { _id: 'Tejas', Name: 'Tejas Jawale', City: 'Nashik', State: 'MH' } ]
primaryDB> db.PassPort.find();
[ { _id: 'Tejas', PassPortNo: 'Tejas1211099', validity: '25 Years' } ]
primaryDB> db.Person.find();
[   Name: 'Tejas Jawale',
  { City: 'Nashik',
    _id: 'Tejas',
    Name: 'Tejas Jawale',ssPortNo: 'Tejas12101999' }
    City: 'Nashik',
    State: 'MH',
    PassPortDetails: { PassPortNo: 'Tejas12101999', validity: '25 Years' }
  }
]
primaryDB> edit db.Person1.aggregate()
Opening an editor...

primaryDB> db.Person1.aggregate()
[ { _id: 'Tejas', Name: 'Tejas Jawale', City: 'Nashik', State: 'MH' } ]
primaryDB>

primaryDB> edit db.Person1.aggregate()
Opening an editor...

primaryDB> db.Person1.aggregate([{ $lookup: { from: "PassPort", localField: "_id", foreignField: "_id", as: "Passport Details" } }])
[
  {
    _id: 'Tejas',
    Name: 'Tejas Jawale',
    City: 'Nashik',
    State: 'MH',
    'Passport Details': [
      {
        _id: 'Tejas',
        PassPortNo: 'Tejas1211099',
        validity: '25 Years'
      }
    ]
  }
]
primaryDB> db.getCollectionNames();
[
  'Book1',   'Person1',
  'Student', 'emp',
  'person',  'PassPort',
  'Person',  'Emp',
  'Books',   'Dept'
]
primaryDB> db.Books.find();
[
  {
    _id: ObjectId("62903d8f0c4d30f244255889"),
    Title: 'JAVA C.R.',
    Author: 'Tejas'
  },
  {
    _id: ObjectId("62903e1b0c4d30f24425588a"),
    Title: 'MySQL',
    Author: 'Sayali',
    Price: 1200
  },
  {
    _id: ObjectId("629040a60c4d30f24425588c"),
    Title: 'SHAM CHI AAI',
    Author: 'Pandurang Sadashiv Sane',
    Phone: [ 1234567, 7654321 ],
    EmailID: [ 'ABC@gmail.com', 'DEF@gamil.com' ],
    Cost: { Currency: '$', Price: 1300 }
  },
  {
    _id: ObjectId("629045ba7ac955025a0dd16d"),
    Title: 'hBase',
    ISBN: 'BVC321',
    Cost: { Currency: 'Rs.', Price: 1300 },
    Author: [
      { Name: 'Ram', City: 'Pune' },
      { Name: 'SHAM', City: 'Nashik', Phone: 12345 }
    ]
  }
]
primaryDB> db.Book1.find();
[
  { _id: 3, Title: 'Tejas', cost: 1450 },
  { _id: ObjectId("629075767ac955025a0dd177"), Title: 'ABC' }
]
primaryDB> db.Book1.remove({});
{ acknowledged: true, deletedCount: 2 }
primaryDB> db.Book1.find();

primaryDB> edit db.Book1.insertMany([{}]);
Opening an editor...

primaryDB> db.Book1.insertMany([{}]);
{
  acknowledged: true,
  insertedIds: { '0': ObjectId("629199c46e113dd7665684d3") }
}
primaryDB> db.Book1.remove({});
{ acknowledged: true, deletedCount: 1 }
primaryDB> edit db.Book1.insertMany([{}]);
Opening an editor...

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:73)

> 1 | db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }])
    |                                                                          ^
  2 |

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }]);
Uncaught:
SyntaxError: Unexpected token, expected "," (1:73)

> 1 | db.Book1.insertMany([{ _id:"B1", Title:"T1", },{ _id:"B2", Title:"T2",  }{ _id:"B3", Title:"T3",  }{ _id:"B4", Title:"T4",  }{ _id:"B5", Title:"T5",  }]);
    |                                                                          ^
  2 |

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",}{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
Uncaught:
SyntaxError: Unexpected token, expected "," (1:70)

> 1 | db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",}{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
    |                                                                       ^
  2 |

primaryDB> db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",},{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
{
  acknowledged: true,
  insertedIds: { '0': 'B1', '1': 'B2', '2': 'B3', '3': 'B4', '4': 'B5' }
}
primaryDB> edit db.Book1.insertMany([{ _id:"B1", Title:"T1",},{ _id:"B2", Title:"T2",},{ _id:"B3", Title:"T3",},{ _id:"B4", Title:"T4",},{ _id:"B5", Title:"T5",}]);
Opening an editor...

primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: 'B1' }, { _id: "B2", Title: "T2", ISBN: 'B2' }, { _id: "B3", Title: "T3", ISBN: 'B3' }, { _id: "B4", TTitle: "T4", ISBN: 'B4' }, { _id: "B5", Title: "T5", ISBN: 'B5' }]);
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }',
          errInfo: undefined,
          op: { _id: 'B1', Title: 'T1', ISBN: 'B1' }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [
      { index: 0, _id: 'B1' },
      { index: 1, _id: 'B2' },
      { index: 2, _id: 'B3' },
      { index: 3, _id: 'B4' },
      { index: 4, _id: 'B5' }
    ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Book1.find();
[
  { _id: 'B1', Title: 'T1' },
  { _id: 'B2', Title: 'T2' },
  { _id: 'B3', Title: 'T3' },
  { _id: 'B4', Title: 'T4' },
  { _id: 'B5', Title: 'T5' }
]
primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: 'B1' }, { _id: "B2", Title: "T2", ISBN: 'B2' }, { _id: "B3", Title: "T3", ISBN: 'B3' }, { _id: "B4", Title: "T4", ISBN: 'B4' }, { _id: "B5", Title: "T5", ISBN: 'B5' }]);
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }',
          errInfo: undefined,
          op: { _id: 'B1', Title: 'T1', ISBN: 'B1' }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [
      { index: 0, _id: 'B1' },
      { index: 1, _id: 'B2' },
      { index: 2, _id: 'B3' },
      { index: 3, _id: 'B4' },
      { index: 4, _id: 'B5' }
    ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: "B1" }, { _id: "B2", Title: "T2", ISBN: "B2" }, { _id: "B3", Title: "T3", ISBN: "B3" }, { _id: "B4", Title: "T4", ISBN: "B4" }, { _id: "B5", Title: "T5", ISBN: "B5" }]);
Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }
Result: BulkWriteResult {
  result: {
    ok: 1,
    writeErrors: [
      WriteError {
        err: {
          index: 0,
          code: 11000,
          errmsg: 'E11000 duplicate key error collection: primaryDB.Book1 index: _id_ dup key: { _id: "B1" }',
          errInfo: undefined,
          op: { _id: 'B1', Title: 'T1', ISBN: 'B1' }
        }
      }
    ],
    writeConcernErrors: [],
    insertedIds: [
      { index: 0, _id: 'B1' },
      { index: 1, _id: 'B2' },
      { index: 2, _id: 'B3' },
      { index: 3, _id: 'B4' },
      { index: 4, _id: 'B5' }
    ],
    nInserted: 0,
    nUpserted: 0,
    nMatched: 0,
    nModified: 0,
    nRemoved: 0,
    upserted: []
  }
}
primaryDB> db.Book1.remove({});
{ acknowledged: true, deletedCount: 5 }
primaryDB> db.Book1.insertMany([{ _id: "B1", Title: "T1", ISBN: "B1" }, { _id: "B2", Title: "T2", ISBN: "B2" }, { _id: "B3", Title: "T3", ISBN: "B3" }, { _id: "B4", Title: "T4", ISBN: "B4" }, { _id: "B5", Title: "T5", ISBN: "B5" }]);
{
  acknowledged: true,
  insertedIds: { '0': 'B1', '1': 'B2', '2': 'B3', '3': 'B4', '4': 'B5' }
}
primaryDB> db.Book1.find();
[
  { _id: 'B1', Title: 'T1', ISBN: 'B1' },
  { _id: 'B2', Title: 'T2', ISBN: 'B2' },
  { _id: 'B3', Title: 'T3', ISBN: 'B3' },
  { _id: 'B4', Title: 'T4', ISBN: 'B4' },
  { _id: 'B5', Title: 'T5', ISBN: 'B5' }
]
primaryDB> db.createCollection('Author');
{ ok: 1 }
primaryDB> edit db.Author.insertMany([{}]);
Opening an editor...

primaryDB> edit db.Author.insertMany([{}]);
Opening an editor...

primaryDB> edit db.Author.insertMany([{}]);
Opening an editor...

primaryDB> db.Author.insertMany([{ _id: "A1", Name: "N1", bookID: "B1" }, { _id: "A2", Name: "N2", bookID: "B2" }, { _id: "A3", Name: "N4", bookID: "B4" }, { _id: "A5", Name: "N5", bookID: "B5" }, { _id: "A6", Name: "N6", bookID: "B6" }, { _id: "A7", Name: "N7", bookID: "B7" }, { _id: "A8", Name: "N8", bookID: "B8" }, { _id: "A9", Name: "N9", bookID: "B9" }, { _id: "A10", Name: "N10", bookID: "B10" }, { _id: "A11", Name: "N11", bookID: "B11" }]);
{
  acknowledged: true,
  insertedIds: {
    '0': 'A1',
    '1': 'A2',
    '2': 'A3',
    '3': 'A5',
    '4': 'A6',
    '5': 'A7',
    '6': 'A8',
    '7': 'A9',
    '8': 'A10',
    '9': 'A11'
  }
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> edit db.Book1.aggregate([{}])
Opening an editor...

primaryDB> db.Book1.aggregate([{ $lookup: { from: "Author", localField: "ISBN", forforeignField: "bookID", as: "Author Details" } }])
[
  {
    _id: 'B1',
    Title: 'T1',
    ISBN: 'B1',
    'Author Details': [ { _id: 'A1', Name: 'N1', bookID: 'B1' } ]
  },
  {
    _id: 'B2',
    Title: 'T2',
    ISBN: 'B2',
    'Author Details': [ { _id: 'A2', Name: 'N2', bookID: 'B2' } ]
  },
  { _id: 'B3', Title: 'T3', ISBN: 'B3', 'Author Details': [] },
  {
    _id: 'B4',
    Title: 'T4',
    ISBN: 'B4',
    'Author Details': [ { _id: 'A3', Name: 'N4', bookID: 'B4' } ]
  },
  {
    _id: 'B5',
    Title: 'T5',
    ISBN: 'B5',
    'Author Details': [ { _id: 'A5', Name: 'N5', bookID: 'B5' } ]
  }
]
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{name:"Tejas"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10', name: 'Tejas' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{Name:"Tejas"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', name: 'Tejas' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.remove({});
{ acknowledged: true, deletedCount: 10 }
primaryDB> db.Author.insertMany([{ _id: "A1", Name: "N1", bookID: "B1" }, { _id: "A2", Name: "N2", bookID: "B2" }, { _id: "A3", Name: "N4", bookID: "B4" }, { _id: "A5", Name: "N5", bookID: "B5" }, { _id: "A6", Name: "N6", bookID: "B6" }, { _id: "A7", Name: "N7", bookID: "B7" }, { _id: "A8", Name: "N8", bookID: "B8" }, { _id: "A9", Name: "N9", bookID: "B9" }, { _id: "A10", Name: "N10", bookID: "B10" }, { _id: "A11", Name: "N11", bookID: "B11" }]);
{
  acknowledged: true,
  insertedIds: {
    '0': 'A1',
    '1': 'A2',
    '2': 'A3',
    '3': 'A5',
    '4': 'A6',
    '5': 'A7',
    '6': 'A8',
    '7': 'A9',
    '8': 'A10',
    '9': 'A11'
  }
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'N10', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{Name:"Tejas"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateOne({_id:'A10'},{$set:{Charges:12000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', Charges: 12000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$set:{Charges:12000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 9,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1', Charges: 12000 },
  { _id: 'A2', Name: 'N2', bookID: 'B2', Charges: 12000 },
  { _id: 'A3', Name: 'N4', bookID: 'B4', Charges: 12000 },
  { _id: 'A5', Name: 'N5', bookID: 'B5', Charges: 12000 },
  { _id: 'A6', Name: 'N6', bookID: 'B6', Charges: 12000 },
  { _id: 'A7', Name: 'N7', bookID: 'B7', Charges: 12000 },
  { _id: 'A8', Name: 'N8', bookID: 'B8', Charges: 12000 },
  { _id: 'A9', Name: 'N9', bookID: 'B9', Charges: 12000 },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', Charges: 12000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11', Charges: 12000 }
]
primaryDB> db.Author.updateMany({},{$unset:{Charges:12000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$unset:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 0,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$set:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1', C1: 12000, C2: 30000 },
  { _id: 'A2', Name: 'N2', bookID: 'B2', C1: 12000, C2: 30000 },
  { _id: 'A3', Name: 'N4', bookID: 'B4', C1: 12000, C2: 30000 },
  { _id: 'A5', Name: 'N5', bookID: 'B5', C1: 12000, C2: 30000 },
  { _id: 'A6', Name: 'N6', bookID: 'B6', C1: 12000, C2: 30000 },
  { _id: 'A7', Name: 'N7', bookID: 'B7', C1: 12000, C2: 30000 },
  { _id: 'A8', Name: 'N8', bookID: 'B8', C1: 12000, C2: 30000 },
  { _id: 'A9', Name: 'N9', bookID: 'B9', C1: 12000, C2: 30000 },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', C1: 12000, C2: 30000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11', C1: 12000, C2: 30000 }
]
primaryDB> db.Author.updateMany({},{$unset:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1' },
  { _id: 'A2', Name: 'N2', bookID: 'B2' },
  { _id: 'A3', Name: 'N4', bookID: 'B4' },
  { _id: 'A5', Name: 'N5', bookID: 'B5' },
  { _id: 'A6', Name: 'N6', bookID: 'B6' },
  { _id: 'A7', Name: 'N7', bookID: 'B7' },
  { _id: 'A8', Name: 'N8', bookID: 'B8' },
  { _id: 'A9', Name: 'N9', bookID: 'B9' },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10' },
  { _id: 'A11', Name: 'N11', bookID: 'B11' }
]
primaryDB> db.Author.updateMany({},{$set:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  { _id: 'A1', Name: 'N1', bookID: 'B1', C1: 12000, C2: 30000 },
  { _id: 'A2', Name: 'N2', bookID: 'B2', C1: 12000, C2: 30000 },
  { _id: 'A3', Name: 'N4', bookID: 'B4', C1: 12000, C2: 30000 },
  { _id: 'A5', Name: 'N5', bookID: 'B5', C1: 12000, C2: 30000 },
  { _id: 'A6', Name: 'N6', bookID: 'B6', C1: 12000, C2: 30000 },
  { _id: 'A7', Name: 'N7', bookID: 'B7', C1: 12000, C2: 30000 },
  { _id: 'A8', Name: 'N8', bookID: 'B8', C1: 12000, C2: 30000 },
  { _id: 'A9', Name: 'N9', bookID: 'B9', C1: 12000, C2: 30000 },
  { _id: 'A10', Name: 'Tejas', bookID: 'B10', C1: 12000, C2: 30000 },
  { _id: 'A11', Name: 'N11', bookID: 'B11', C1: 12000, C2: 30000 }
]
primaryDB> db.Author.updateMany({},{$rename:{C1:"Salary" , C2 :"Commission"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12000
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12000
  }
]
primaryDB> db.Author.updateMany({},{$inc:{Salary:25.57});
Uncaught:
SyntaxError: Unexpected token, expected "," (1:44)

> 1 | db.Author.updateMany({},{$inc:{Salary:25.57});
    |                                             ^
  2 |

primaryDB> db.Author.updateMany({},{$inc:{Salary:25.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12025.57
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12025.57
  }
]
primaryDB> db.Author.updateMany({},{$inc:{Salary:625.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12651.14
  }
]
primaryDB> db.Author.updateOne({},{$inc:{Salary:25.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12676.71
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A11',
    Name: 'N11',
    bookID: 'B11',
    Commission: 30000,
    Salary: 12651.14
  }
]
primaryDB> db.Author.deleteOne({_id:"A11"});
{ acknowledged: true, deletedCount: 1 }
primaryDB> db.Author.find();
[
  {
    _id: 'A1',
    Name: 'N1',
    bookID: 'B1',
    Commission: 30000,
    Salary: 12676.71
  },
  {
    _id: 'A2',
    Name: 'N2',
    bookID: 'B2',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A3',
    Name: 'N4',
    bookID: 'B4',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A5',
    Name: 'N5',
    bookID: 'B5',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A6',
    Name: 'N6',
    bookID: 'B6',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A7',
    Name: 'N7',
    bookID: 'B7',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A8',
    Name: 'N8',
    bookID: 'B8',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A9',
    Name: 'N9',
    bookID: 'B9',
    Commission: 30000,
    Salary: 12651.14
  },
  {
    _id: 'A10',
    Name: 'Tejas',
    bookID: 'B10',
    Commission: 30000,
    Salary: 12651.14
  }
]
primaryDB> db.Author.deleteMany({Salary:{$gt:12650}});
{ acknowledged: true, deletedCount: 9 }
primaryDB> db.Author.find();

primaryDB> db.Author.insertMany([{ _id: "A1", Name: "N1", bookID: "B1" }, { _id: "A2", Name: "N2", bookID: "B2" }, { _id: "A3", Name: "N4", bookID: "B4" }, { _id: "A5", Name: "N5", bookID: "B5" }, { _id: "A6", Name: "N6", bookID: "B6" }, { _id: "A7", Name: "N7", bookID: "B7" }, { _id: "A8", Name: "N8", bookID: "B8" }, { _id: "A9", Name: "N9", bookID: "B9" }, { _id: "A10", Name: "N10", bookID: "B10" }, { _id: "A11", Name: "N11", bookID: "B11" }]);
{
  acknowledged: true,
  insertedIds: {
    '0': 'A1',
    '1': 'A2',
    '2': 'A3',
    '3': 'A5',
    '4': 'A6',
    '5': 'A7',
    '6': 'A8',
    '7': 'A9',
    '8': 'A10',
    '9': 'A11'
  }
}
primaryDB> db.Author.updateMany({},{$set:{C1:12000 , C2 : 30000}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.updateMany({},{$rename:{C1:"Salary" , C2 :"Commission"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.updateMany({},{$inc:{Salary:625.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 10,
  modifiedCount: 10,
  upsertedCount: 0
}
primaryDB> db.Author.updateOne({},{$inc:{Salary:25.57}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
primaryDB> show tables;
Author
Book1
Books
Dept
emp
Emp
PassPort
person
Person
Person1
Student
primaryDB> db.find.emp();
TypeError: db.find.emp is not a function
primaryDB> db.emp.find();
[
  {
    _id: ObjectId("62909edda9fd08e69f1af61c"),
    EMPNO: '6001\tGITA\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t30\t1\tGITA\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61d"),
    EMPNO: '7369\tSMITH\tM\tCLERK\t7902\t1980-12-17\t800\t\\N\t20\t2\tTRITONE\ta12recmpm\t7032300023\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61e"),
    EMPNO: '7415\tAARAV\tM\tCLERK\t7902\t1981-12-31\t3350\t\\N\t10\t\\N\tAARAV\t\\N\t7032300084\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af61f"),
    EMPNO: '7421\tTHOMAS\tM\tCLERK\t7920\t1981-07-19\t1750\t\\N\t10\t1\tTHOMAS\tr50mpm\t7032300011\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af620"),
    EMPNO: '7499\tALLEN\tM\tSALESMAN\t7698\t1981-02-20\t1600\t300\t30\t4\tALWAYS TESTE\tsales@2017\t7032300096\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af621"),
    EMPNO: '7521\tWARD\tM\tSALESMAN\t7698\t1981-02-22\t1250\t500\t30\t1\tWARD\tsales@2017\t7132300034\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af622"),
    EMPNO: '6129\tVRUSHALI\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t50\t1\tVRUSHALI\tPUN@8877\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af623"),
    EMPNO: '6473\tSHARMIN\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tSHARMIN\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af624"),
    EMPNO: '6781\tBANDISH\tF\tPublic Relation\t7920\t1981-07-19\t1750\t\\N\t20\t1\tBANDISH\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af625"),
    EMPNO: '7566\tJONES\tM\tMANAGER\t7839\t1981-04-02\t2975\t\\N\t20\t4\tHONEYCOMB\ta12recmpm\t7132300039\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af626"),
    EMPNO: '7698\tBLAKE\tM\tMANAGER\t7839\t1981-05-01\t2850\t\\N\t30\t1\tBIG BEN\tsales@2017\t7132300027\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af627"),
    EMPNO: '7839\tKING\tM\tPRESIDENT\t\\N\t1981-11-17\t5000\t\\N\t10\t1\tKING\tr50mpm\t7132300081\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af628"),
    EMPNO: '7840\tFRED\tM\tvice PRESIDENT\t7839\t1983-08-09\t5000\t\\N\t20\t1\tSAND STONE\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af629"),
    EMPNO: '7844\tTURNER\tM\tSALESMAN\t7698\t1981-09-08\t1500\t0\t30\t5\tSAND DUST\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62a"),
    EMPNO: '7654\tMARTIN\tM\tSALESMAN\t7698\t1981-09-28\t1250\t1400\t30\t6\tLIFE RACER\tsales@2017\t7132300050\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62b"),
    EMPNO: '7782\tCLARK\tM\tMANAGER\t7839\t1981-06-09\t2450\t\\N\t10\t3\tCLARK\tr50mpm\t7032300001\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62c"),
    EMPNO: '7788\tSCOTT\tM\tANALYST\t7566\t1982-12-09\t3000\t\\N\t20\t3\tWHITE SAND\ta12recmpm\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62d"),
    EMPNO: '7876\tADAMS\tM\tCLERK\t7788\t1983-01-12\t1100\t\\N\t20\t1\tCRAZY ANYONE\ta12recmpm\t7132300086\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62e"),
    EMPNO: '7900\tJAMES\tM\tCLERK\t7698\t1981-12-03\t950\t\\N\t30\t2\tCRAZY LEADER\tsales@2017\t7132300042\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af62f"),
    EMPNO: '7902\tFORD\tM\tANALYST\t7566\t1981-12-03\t3000\t\\N\t20\t4\tCONBRIO\ta12recmpm\t\\N\t0'
  }
]
Type "it" for more
primaryDB> it
[
  {
    _id: ObjectId("62909edda9fd08e69f1af630"),
    EMPNO: '7919\tHOFFMAN\tM\tMANAGER\t7566\t1982-03-24\t4150\t\\N\t30\t3\tINTERVAL\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af631"),
    EMPNO: '7920\tGRASS\tM\tSALESMAN\t7919\t1980-02-14\t2575\t2700\t30\t5\tGRASS\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af632"),
    EMPNO: '7934\tMILLER\tM\tCLERK\t7782\t1982-01-23\t1300\t\\N\t10\t2\tQUARTERNOTE\tr50mpm\t7132300055\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af633"),
    EMPNO: '7945\tAARUSH\tM\tSALESMAN\t7902\t1980-02-14\t1350\t2700\t30\t\\N\tAARUSH\tABCDEF\t\\N\t0'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af634"),
    EMPNO: '7949\tALEX\tM\tMANAGER\t7698\t1982-01-24\t1250\t500\t30\t5\tQUARTERREST\tsales@2017\t7156567183\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af635"),
    EMPNO: '8433\tNATASHA\tF\tCLERK\t7920\t1981-07-19\t1750\t\\N\t30\t1\tNATASHA\tsales@2017\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af636"),
    EMPNO: '9400\tSANGITA\tF\tCompliance officers\t7920\t1981-07-19\t1750\t\\N\t50\t1\tSANGITA\t\\N\t\\N\t1'
  },
  {
    _id: ObjectId("62909edda9fd08e69f1af637"),
    EMPNO: '9473\tSUPRIYA\tF\tANALYST\t7920\t1981-07-19\t1750\t\\N\t50\t1\tSUPRIYA\tXYZ@1234\t\\N\t1'
  }
]
primaryDB> db.Emp.find();
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f7"),
    empid: 1023,
    ename: 'jack',
    address: {
      building: '2780',
      coord: [ -73.98241999999999, 40.579505 ],
      street: 'Stillwell Avenue',
      zipcode: '11224'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Air Force Blue', 'Apple Green' ],
    fruit: [ 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'accountant',
    mgr: 1022,
    hiredate: ISODate("1981-04-02T00:00:00.000Z"),
    sal: 2700,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fa"),
    empid: 1023,
    ename: 'scott',
    address: {
      building: '97-22',
      coord: [ -73.8601152, 40.7311739 ],
      street: '63 Road',
      zipcode: '11374'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Ash Grey', 'White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93872', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-28T00:00:00.000Z"),
    sal: 2500,
    comm: 350,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fb"),
    empid: 1024,
    ename: 'martin',
    address: {
      building: '8825',
      coord: [ -73.8803827, 40.7643124 ],
      street: 'Astoria Boulevard',
      zipcode: '11369'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Banana Yellow' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '72877', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-02-20T00:00:00.000Z"),
    sal: 2900,
    comm: 735,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fc"),
    empid: 1025,
    ename: 'crow',
    address: {
      building: '2206',
      coord: [ -74.1377286, 40.6119572 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green', 'Ash Grey' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77876', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-08T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fd"),
    empid: 1027,
    ename: 'richards',
    address: {
      building: '6409',
      coord: [ -74.00528899999999, 40.628886 ],
      street: '11 Avenue',
      zipcode: '11219'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Charcoal', 'Cherry' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '83972', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-02-22T00:00:00.000Z"),
    sal: 1500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fe"),
    empid: 1026,
    ename: 'blake',
    address: {
      building: '7114',
      coord: [ -73.9068506, 40.6199034 ],
      street: 'Avenue U',
      zipcode: '11234'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brass', 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989ff"),
    empid: 1020,
    ename: 'king',
    address: {
      building: '1007',
      coord: [ -73.856077, 40.848447 ],
      street: 'Morris Park Ave',
      zipcode: '10462'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'blue', 'black' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93478', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'president',
    mgr: null,
    hiredate: ISODate("1981-11-17T00:00:00.000Z"),
    sal: 5000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a00"),
    empid: 1028,
    ename: 'peter',
    address: {
      building: '1839',
      coord: [ -73.9482609, 40.6408271 ],
      street: 'Nostrand Avenue',
      zipcode: '11226'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brown' ],
    fruit: [ 'banana', 'Jackfruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '92783', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1025,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a01"),
    empid: 1031,
    ename: 'sharmin',
    address: {
      building: '1269',
      coord: [ -73.871194, 40.6730975 ],
      street: 'Sutter Avenue',
      zipcode: '11208'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Cream' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '16523', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1983-01-12T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a02"),
    empid: 1032,
    ename: 'vrushali',
    address: {
      building: '1',
      coord: [ -73.96926909999999, 40.7685235 ],
      street: 'East   66 Street',
      zipcode: '10065'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Iceberg' ],
    fruit: [ 'Orange', 'Papaya', 'Kiwi' ],
    cards: [
      { aadhar: { 'aadhar-No': '22343', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1030,
    hiredate: ISODate("1982-02-23T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a03"),
    empid: 1033,
    ename: 'vasant',
    address: {
      building: '705',
      coord: [ -73.9653967, 40.6064339 ],
      street: 'Kings Highway',
      zipcode: '11223'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93824', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1982-02-24T00:00:00.000Z"),
    sal: 2200,
    comm: 0,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a05"),
    empid: 1034,
    ename: 'vasu',
    address: {
      building: '203',
      coord: [ -73.97822040000001, 40.6435254 ],
      street: 'Church Avenue',
      zipcode: '11218'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'Dates' ],
    cards: [
      { aadhar: { 'aadhar-No': '19826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1980-02-14T00:00:00.000Z"),
    sal: 2200,
    comm: 250,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a06"),
    empid: 1035,
    ename: 'rahul',
    address: {
      building: '265-15',
      coord: [ -73.7032601, 40.7386417 ],
      street: 'Hillside Avenue',
      zipcode: '11004'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Lychee', 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '00998', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1029,
    hiredate: ISODate("1981-12-31T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a07"),
    empid: 1036,
    ename: 'raju',
    address: {
      building: '6909',
      coord: [ -74.0259567, 40.6353674 ],
      street: '3 Avenue',
      zipcode: '11209'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Yellow' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '55622', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1031,
    hiredate: ISODate("1983-06-15T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a08"),
    empid: 1030,
    ename: 'saleel',
    address: {
      building: '7715',
      coord: [ -73.9973325, 40.61174889999999 ],
      street: '18 Avenue',
      zipcode: '11214'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Coral' ],
    fruit: [ 'Dates', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '73822', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 2900,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a09"),
    empid: 1037,
    ename: 'ramu',
    address: {
      building: '522',
      coord: [ -73.95171, 40.767461 ],
      street: 'East   74 Street',
      zipcode: '10021'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lemon' ],
    fruit: [ 'Jackfruit', 'banana', 'Apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '00983', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1031,
    hiredate: ISODate("1983-07-12T00:00:00.000Z"),
    sal: 1400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0a"),
    empid: 1040,
    ename: 'amit',
    address: {
      building: '759',
      coord: [ -73.9925306, 40.7309346 ],
      street: 'Broadway',
      zipcode: '10003'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '66623', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1029,
    hiredate: ISODate("1982-12-08T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ 85088422, Long("9822884228") ]
  }
]
Type "it" for more
primaryDB> it
[
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0b"),
    empid: 1039,
    ename: 'saleel',
    address: {
      building: '129-08',
      coord: [ -73.839297, 40.78147 ],
      street: '20 Avenue',
      zipcode: '11356'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Cherry', 'Charcoal' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '66675', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1022,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 3700,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0c"),
    empid: 1042,
    ename: 'amit',
    address: {
      building: '502',
      coord: [ -73.976112, 40.786714 ],
      street: 'Amsterdam Avenue',
      zipcode: '10024'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77787', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1029,
    hiredate: ISODate("1981-11-03T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ '9850884228', '9822884228' ]
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0d"),
    empid: 1041,
    ename: 'dinesh',
    address: {
      building: '3406',
      coord: [ -73.94024739999999, 40.7623288 ],
      street: '10 Street',
      zipcode: '11106'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Air Force Blue' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77767', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1021,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ 85088422, Long("9822884228") ],
    skills: { languages: [ 'C++', 'JAVA' ], web: [ 'php', 'java', 'jquery' ] }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0e"),
    empid: 1043,
    ename: 'dinesh',
    address: {
      building: '730',
      coord: [ -73.96805719999999, 40.7925587 ],
      street: 'Columbus Avenue',
      zipcode: '10025'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Navy Blue' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77789', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1021,
    hiredate: ISODate("1981-11-04T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ '020-25420200', Long("9822336644") ],
    skills: { languages: [ 'C++', 'JAVA' ], web: [ 'php', 'java', 'jquery' ] }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0f"),
    empid: 1044,
    ename: 'rudra',
    address: {
      building: '18',
      coord: [ -73.996984, 40.72589 ],
      street: 'West Houston Street',
      zipcode: '10012'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lime' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '55543', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1021,
    hiredate: ISODate("1981-11-04T00:00:00.000Z"),
    sal: 2400,
    comm: null,
    deptno: 50,
    phone: '020-25420212',
    skills: {
      web: [ 'php', 'java', 'jquery' ],
      database: [ 'oracle', 'ms-sql server', 'mongodb' ]
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a10"),
    empid: 1045,
    ename: 'pankaj',
    address: {
      building: '531',
      coord: [ -73.9634876, 40.6940001 ],
      street: 'Myrtle Avenue',
      zipcode: '11205'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'Peach' ],
    cards: [
      { aadhar: { 'aadhar-No': '55565', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1023,
    hiredate: ISODate("1980-02-17T00:00:00.000Z"),
    sal: 3600,
    comm: null,
    deptno: 40,
    phone: '022-2548345',
    skills: { language: '.NET', database: 'ms-sql server' }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a11"),
    empid: 1038,
    ename: 'neel',
    address: {
      building: '284',
      coord: [ -73.9829239, 40.6580753 ],
      street: 'Prospect Park West',
      zipcode: '11215'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '00098', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1030,
    hiredate: ISODate("1983-03-14T00:00:00.000Z"),
    sal: 4200,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a12"),
    empid: 1046,
    ename: 'anoop',
    address: {
      building: '103-05',
      coord: [ -73.8642349, 40.75356 ],
      street: '37 Avenue',
      zipcode: '11368'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Navy Blue' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '83722', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1029,
    hiredate: ISODate("1980-02-17T00:00:00.000Z"),
    sal: 2300,
    comm: 1200,
    deptno: 50,
    phone: '022-2548345',
    skills: {
      language: [ '.NET', 'java' ],
      database: 'oracle',
      web: [ 'json', 'jquery', 'javascript' ]
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a13"),
    empid: 1049,
    ename: 'arjun',
    address: {
      building: '107',
      coord: [ -74.00920839999999, 40.7132925 ],
      street: 'Church Street',
      zipcode: '10007'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Sky Blue', 'Navy Blue', 'Blue' ],
    fruit: [ 'Lychee' ],
    cards: [
      { aadhar: { 'aadhar-No': '55434', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'auditor',
    mgr: 1020,
    hiredate: ISODate("1984-05-05T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    hra: 1500,
    da: 1200,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a14"),
    empid: 1050,
    ename: 'amol',
    address: {
      building: '1006',
      coord: [ -73.84856870000002, 40.8903781 ],
      street: 'East 233 Street',
      zipcode: '10466'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [ 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '44445', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'auditor',
    mgr: 1047,
    hiredate: ISODate("1984-05-06T00:00:00.000Z"),
    sal: 3800,
    comm: null,
    hra: 1000,
    da: 900,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a15"),
    empid: 1047,
    ename: 'nitish',
    address: {
      building: '60',
      coord: [ -74.0085357, 40.70620539999999 ],
      street: 'Wall Street',
      zipcode: '10005'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Coral', 'Cream' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '99890', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1039,
    hiredate: ISODate("1980-03-14T00:00:00.000Z"),
    sal: 1300,
    comm: 1200,
    deptno: 50,
    phone: '022-2548345',
    skills: {
      language: [ '.NET', 'java' ],
      database: { rdbms: [ 'oracle', 'db2' ], nosql: [ 'mongodb', 'hive' ] },
      web: [ 'json', 'jquery', 'javascript', 'php' ]
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a16"),
    empid: 1051,
    ename: 'sangita',
    address: {
      building: '56',
      coord: [ -73.991495, 40.692273 ],
      street: 'Court Street',
      zipcode: '11201'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'Papaya' ],
    cards: [
      { aadhar: { 'aadhar-No': '99983', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'auditor',
    mgr: 1040,
    hiredate: ISODate("1984-03-30T00:00:00.000Z"),
    sal: 3100,
    comm: null,
    hra: 1000,
    da: 1500,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a17"),
    empid: 1053,
    ename: 'sita',
    address: {
      building: '120',
      coord: [ -73.9998042, 40.7251256 ],
      street: 'Prince Street',
      zipcode: '10012'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [ 'Guava' ],
    cards: [
      { aadhar: { 'aadhar-No': '12233', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'writer',
    language: [ 'english', 'hindi', 'marathi' ],
    mgr: 1049,
    hiredate: ISODate("1984-03-30T00:00:00.000Z"),
    sal: 3755,
    comm: 750,
    hra: 1100,
    da: 1100,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a18"),
    empid: 1052,
    ename: 'gita',
    address: {
      building: '7615',
      coord: [ -74.0228449, 40.6281815 ],
      street: '5 Avenue',
      zipcode: '11209'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Kiwi' ],
    cards: [
      { aadhar: { 'aadhar-No': '44460', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'writer',
    language: [ 'english', 'hindi' ],
    mgr: 1049,
    hiredate: ISODate("1984-03-29T00:00:00.000Z"),
    sal: 2150,
    comm: 750,
    hra: 1300,
    da: 1700,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a19"),
    empid: 2001,
    ename: 'pinky',
    address: {
      building: '1236',
      coord: [ -73.8893654, 40.81376179999999 ],
      street: '238 Spofford Ave',
      zipcode: '10474'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'banana', 'Jackfruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '33434', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 1039,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1a"),
    empid: 1048,
    ename: 'neel',
    address: {
      building: '195',
      coord: [ -73.9246028, 40.6522396 ],
      street: 'East   56 Street',
      zipcode: '11203'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '99099', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1039,
    hiredate: ISODate("1980-03-14T00:00:00.000Z"),
    sal: 1800,
    comm: 1400,
    deptno: 50,
    phone: '022-2534565',
    skills: {
      language: 'ruby',
      database: {
        rdbms: [ 'oracle', 'db2' ],
        nosql: [ 'mongodb', 'hive', 'hbase' ]
      }
    }
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1b"),
    empid: 2003,
    ename: 'supriya',
    address: {
      building: '1069',
      coord: [ -73.902463, 40.694924 ],
      street: 'Wyckoff Avenue',
      zipcode: '11385'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '33343', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2001,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1c"),
    empid: 2004,
    ename: 'sangu',
    address: {
      building: '405',
      coord: [ -73.97534999999999, 40.7516269 ],
      street: 'Lexington Avenue',
      zipcode: '10174'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green' ],
    fruit: [ 'Passion Fruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '33321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2002,
    hiredate: ISODate("1980-07-17T00:00:00.000Z"),
    sal: 6000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1d"),
    empid: 2005,
    ename: 'laxman',
    address: {
      building: '2491',
      coord: [ -74.1459332, 40.6103714 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '76565', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01'
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2001,
    hiredate: ISODate("1980-11-17T00:00:00.000Z"),
    sal: 6500,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1e"),
    empid: 2006,
    ename: 'rahsmi',
    address: {
      building: '7905',
      coord: [ -73.8740217, 40.7135015 ],
      street: 'Metropolitan Avenue',
      zipcode: '11379'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [ 'Peach' ],
    cards: [
      { aadhar: { 'aadhar-No': '77625', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2002,
    hiredate: ISODate("1982-05-17T00:00:00.000Z"),
    sal: 5600,
    comm: null,
    deptno: 30
  }
]
Type "it" for more
primaryDB> it
[
  {
    _id: ObjectId("629049c0c0eab0c1bd398a1f"),
    empid: 2008,
    ename: 'roselin',
    address: {
      building: '1418',
      coord: [ -73.95685019999999, 40.7753401 ],
      street: 'Third Avenue',
      zipcode: '10028'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'watermelon', 'mango' ],
    cards: [
      { aadhar: { 'aadhar-No': '22223', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2005,
    hiredate: ISODate("1983-02-17T00:00:00.000Z"),
    sal: 800,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a20"),
    empid: 2007,
    ename: 'raj',
    address: {
      building: '87-69',
      coord: [ -73.8309503, 40.7001121 ],
      street: 'Lefferts Boulevard',
      zipcode: '11418'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Dark Orange' ],
    fruit: [ 'Papaya' ],
    cards: [
      { aadhar: { 'aadhar-No': '87767', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 1039,
    hiredate: ISODate("1981-08-17T00:00:00.000Z"),
    sal: 7000,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a21"),
    empid: 2002,
    ename: 'priti',
    address: {
      building: '625',
      coord: [ -73.990494, 40.7569545 ],
      street: '8 Avenue',
      zipcode: '10018'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '55565', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 1037,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 5500,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a22"),
    empid: 2012,
    ename: 'rupal',
    address: {
      building: '1111',
      coord: [ -74.0796436, 40.59878339999999 ],
      street: 'Hylan Boulevard',
      zipcode: '10305'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [ 'grapes' ],
    cards: [
      { aadhar: { 'aadhar-No': '12374', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 1037,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 6500,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a23"),
    empid: 2011,
    ename: 'snehal',
    address: {
      building: '1031',
      coord: [ -73.9075537, 40.6438684 ],
      street: 'East   92 Street',
      zipcode: '11236'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '66667', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 1039,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 2500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a24"),
    empid: 2009,
    ename: 'janhavi',
    address: {
      building: '464',
      coord: [ -73.9791458, 40.744328 ],
      street: '3 Avenue',
      zipcode: '10016'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [ 'Papaya' ],
    cards: [
      { aadhar: { 'aadhar-No': '11117', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2002,
    hiredate: ISODate("1983-08-17T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a25"),
    empid: 2013,
    ename: 'bandish',
    address: {
      building: '976',
      coord: [ -73.92701509999999, 40.6620192 ],
      street: 'Rutland Road',
      zipcode: '11212'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Snow White' ],
    fruit: [ 'mango' ],
    cards: [
      { aadhar: { 'aadhar-No': '93710', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01'
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1983-07-17T00:00:00.000Z"),
    sal: 7000,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a26"),
    empid: 2014,
    ename: 'madhavi',
    address: {
      building: '148',
      coord: [ -73.9806854, 40.7778589 ],
      street: 'West   72 Street',
      zipcode: '10023'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green' ],
    fruit: [ 'mango' ],
    cards: [
      { aadhar: { 'aadhar-No': '00900', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2002,
    hiredate: ISODate("1980-07-17T00:00:00.000Z"),
    sal: 6900,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a27"),
    empid: 2015,
    ename: 'ram',
    address: {
      building: '364',
      coord: [ -73.96084119999999, 40.8014307 ],
      street: 'West  110 Street',
      zipcode: '10025'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'cherry', 'grapes' ],
    cards: [
      { aadhar: { 'aadhar-No': '00600', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1980-11-17T00:00:00.000Z"),
    sal: 6200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a28"),
    empid: 2016,
    ename: 'aditi',
    address: {
      building: '1423',
      coord: [ -73.9615132, 40.6253268 ],
      street: 'Avenue J',
      zipcode: '11230'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Orange' ],
    fruit: [ 'lime', 'Guava' ],
    cards: [
      { aadhar: { 'aadhar-No': '88788', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2002,
    hiredate: ISODate("1982-05-17T00:00:00.000Z"),
    sal: 5700,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a29"),
    empid: 2010,
    ename: 'jasu',
    address: {
      building: '437',
      coord: [ -73.975393, 40.757365 ],
      street: 'Madison Avenue',
      zipcode: '10022'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lawn Green' ],
    fruit: [ 'Fig', 'apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '44446', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'Computer Programmer',
    mgr: 2007,
    hiredate: ISODate("1983-04-17T00:00:00.000Z"),
    sal: 5800,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2a"),
    empid: 2020,
    ename: 'tanvi',
    address: {
      building: '203',
      coord: [ -74.15235919999999, 40.5563756 ],
      street: 'Giffords Lane',
      zipcode: '10308'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Lawn Green' ],
    fruit: [ 'Avocado' ],
    cards: [
      { aadhar: { 'aadhar-No': '87828', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01'
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2007,
    hiredate: ISODate("1983-04-17T00:00:00.000Z"),
    sal: 5700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2b"),
    empid: 2019,
    ename: 'zara',
    address: {
      building: '277',
      coord: [ -73.8941893, 40.8634684 ],
      street: 'East Kingsbridge Road',
      zipcode: '10458'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Violet' ],
    fruit: [ 'Dragon Fruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '73878', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2002,
    hiredate: ISODate("1983-08-17T00:00:00.000Z"),
    sal: 3700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2c"),
    empid: 2017,
    ename: 'neeraj',
    address: {
      building: '0',
      coord: [ -84.2040813, 9.9986585 ],
      street: 'Guardia Airport Parking',
      zipcode: '11371'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Dark Orange' ],
    fruit: [ 'pineapple' ],
    cards: [
      { aadhar: { 'aadhar-No': '55475', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 1039,
    hiredate: ISODate("1981-08-17T00:00:00.000Z"),
    sal: 7700,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2d"),
    empid: 2021,
    ename: 'Emma',
    address: {
      building: '2031',
      coord: [ -78.15235919457, 47.5568756 ],
      street: 'Giffords Lane',
      zipcode: '11309'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Lawn Green', 'Sky Blue' ],
    fruit: [ 'Avocado', 'Grapes', 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '02920', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1982-04-17T00:00:00.000Z"),
    sal: 7700,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2e"),
    empid: 2023,
    ename: 'Olivia',
    address: {
      building: '031',
      coord: [ -78.15231429456999, 42.5560956 ],
      street: 'Hazel Grove',
      zipcode: '133038'
    },
    isDocActive: true,
    gender: 'female',
    canVote: false,
    canDrive: true,
    color: [ 'Lawn Green', 'Sky Blue' ],
    fruit: [ 'Banana', 'Grapes', 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '23435', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1981-06-17T00:00:00.000Z"),
    sal: 9000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a2f"),
    empid: 2022,
    ename: 'Emma',
    address: {
      building: '2031',
      coord: [ -78.15235919457, 47.5568756 ],
      street: 'Keesey Street',
      zipcode: '11310'
    },
    isDocActive: false,
    gender: 'female',
    canVote: false,
    canDrive: true,
    color: [ 'Lawn Green', 'Sky Blue' ],
    fruit: [ 'Avocado', 'Grapes', 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '23232', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1982-08-17T00:00:00.000Z"),
    sal: 7000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a30"),
    empid: 2018,
    ename: 'meera',
    address: {
      building: '73',
      coord: [ -74.1178949, 40.5734906 ],
      street: 'New Dorp Plaza',
      zipcode: '10306'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'White' ],
    fruit: [ 'watermelon' ],
    cards: [
      { aadhar: { 'aadhar-No': '92832', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2005,
    hiredate: ISODate("1983-02-17T00:00:00.000Z"),
    sal: 801,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a31"),
    empid: 2025,
    ename: 'Emily',
    address: {
      building: '7036',
      coord: [ -78.15299819456999, 40.5568756 ],
      street: 'Adams Row',
      zipcode: '15310'
    },
    isDocActive: false,
    gender: 'female',
    canVote: false,
    canDrive: false,
    color: [ 'Yellow' ],
    fruit: [ 'Grapes' ],
    cards: [
      { aadhar: { 'aadhar-No': '75463', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2004,
    hiredate: ISODate("1981-04-19T00:00:00.000Z"),
    sal: 7600,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a32"),
    empid: 2024,
    ename: 'Mia',
    address: {
      building: '032',
      coord: [ -78.15235919457, 43.5578756 ],
      street: 'Kidd Cottages',
      zipcode: '33038'
    },
    isDocActive: false,
    gender: 'female',
    canVote: false,
    canDrive: true,
    color: [ 'Light Pink', 'Light Blue' ],
    fruit: [ 'Orance' ],
    cards: [
      { aadhar: { 'aadhar-No': '64434', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'WEB Programmer',
    mgr: 2001,
    hiredate: ISODate("1983-04-17T00:00:00.000Z"),
    sal: 9500,
    comm: null,
    deptno: 10
  }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$match:{job:"manager"}}])
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  }
]
primaryDB> db.Emp.aggregate([{$match:{job:"manager"}}])
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  }
]
primaryDB> db.Emp.find();
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f7"),
    empid: 1023,
    ename: 'jack',
    address: {
      building: '2780',
      coord: [ -73.98241999999999, 40.579505 ],
      street: 'Stillwell Avenue',
      zipcode: '11224'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Air Force Blue', 'Apple Green' ],
    fruit: [ 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'accountant',
    mgr: 1022,
    hiredate: ISODate("1981-04-02T00:00:00.000Z"),
    sal: 2700,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fa"),
    empid: 1023,
    ename: 'scott',
    address: {
      building: '97-22',
      coord: [ -73.8601152, 40.7311739 ],
      street: '63 Road',
      zipcode: '11374'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Ash Grey', 'White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93872', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-28T00:00:00.000Z"),
    sal: 2500,
    comm: 350,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fb"),
    empid: 1024,
    ename: 'martin',
    address: {
      building: '8825',
      coord: [ -73.8803827, 40.7643124 ],
      street: 'Astoria Boulevard',
      zipcode: '11369'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Banana Yellow' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '72877', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-02-20T00:00:00.000Z"),
    sal: 2900,
    comm: 735,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fc"),
    empid: 1025,
    ename: 'crow',
    address: {
      building: '2206',
      coord: [ -74.1377286, 40.6119572 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green', 'Ash Grey' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77876', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-08T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fd"),
    empid: 1027,
    ename: 'richards',
    address: {
      building: '6409',
      coord: [ -74.00528899999999, 40.628886 ],
      street: '11 Avenue',
      zipcode: '11219'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Charcoal', 'Cherry' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '83972', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-02-22T00:00:00.000Z"),
    sal: 1500,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fe"),
    empid: 1026,
    ename: 'blake',
    address: {
      building: '7114',
      coord: [ -73.9068506, 40.6199034 ],
      street: 'Avenue U',
      zipcode: '11234'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brass', 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '12321', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1024,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989ff"),
    empid: 1020,
    ename: 'king',
    address: {
      building: '1007',
      coord: [ -73.856077, 40.848447 ],
      street: 'Morris Park Ave',
      zipcode: '10462'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'blue', 'black' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93478', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'president',
    mgr: null,
    hiredate: ISODate("1981-11-17T00:00:00.000Z"),
    sal: 5000,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a00"),
    empid: 1028,
    ename: 'peter',
    address: {
      building: '1839',
      coord: [ -73.9482609, 40.6408271 ],
      street: 'Nostrand Avenue',
      zipcode: '11226'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Brown' ],
    fruit: [ 'banana', 'Jackfruit' ],
    cards: [
      { aadhar: { 'aadhar-No': '92783', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1025,
    hiredate: ISODate("1981-12-03T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a01"),
    empid: 1031,
    ename: 'sharmin',
    address: {
      building: '1269',
      coord: [ -73.871194, 40.6730975 ],
      street: 'Sutter Avenue',
      zipcode: '11208'
    },
    isDocActive: false,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Cream' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '16523', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1983-01-12T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a02"),
    empid: 1032,
    ename: 'vrushali',
    address: {
      building: '1',
      coord: [ -73.96926909999999, 40.7685235 ],
      street: 'East   66 Street',
      zipcode: '10065'
    },
    isDocActive: true,
    gender: 'female',
    canVote: true,
    canDrive: true,
    color: [ 'Iceberg' ],
    fruit: [ 'Orange', 'Papaya', 'Kiwi' ],
    cards: [
      { aadhar: { 'aadhar-No': '22343', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'analyst',
    mgr: 1030,
    hiredate: ISODate("1982-02-23T00:00:00.000Z"),
    sal: 4999,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a03"),
    empid: 1033,
    ename: 'vasant',
    address: {
      building: '705',
      coord: [ -73.9653967, 40.6064339 ],
      street: 'Kings Highway',
      zipcode: '11223'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93824', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1982-02-24T00:00:00.000Z"),
    sal: 2200,
    comm: 0,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a05"),
    empid: 1034,
    ename: 'vasu',
    address: {
      building: '203',
      coord: [ -73.97822040000001, 40.6435254 ],
      street: 'Church Avenue',
      zipcode: '11218'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'Dates' ],
    cards: [
      { aadhar: { 'aadhar-No': '19826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1980-02-14T00:00:00.000Z"),
    sal: 2200,
    comm: 250,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a06"),
    empid: 1035,
    ename: 'rahul',
    address: {
      building: '265-15',
      coord: [ -73.7032601, 40.7386417 ],
      street: 'Hillside Avenue',
      zipcode: '11004'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Lychee', 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '00998', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1029,
    hiredate: ISODate("1981-12-31T00:00:00.000Z"),
    sal: 1200,
    comm: null,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a07"),
    empid: 1036,
    ename: 'raju',
    address: {
      building: '6909',
      coord: [ -74.0259567, 40.6353674 ],
      street: '3 Avenue',
      zipcode: '11209'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Yellow' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '55622', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1031,
    hiredate: ISODate("1983-06-15T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a08"),
    empid: 1030,
    ename: 'saleel',
    address: {
      building: '7715',
      coord: [ -73.9973325, 40.61174889999999 ],
      street: '18 Avenue',
      zipcode: '11214'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Coral' ],
    fruit: [ 'Dates', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '73822', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'programmer',
    mgr: 1020,
    hiredate: ISODate("1982-12-09T00:00:00.000Z"),
    sal: 2900,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a09"),
    empid: 1037,
    ename: 'ramu',
    address: {
      building: '522',
      coord: [ -73.95171, 40.767461 ],
      street: 'East   74 Street',
      zipcode: '10021'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Lemon' ],
    fruit: [ 'Jackfruit', 'banana', 'Apple' ],
    cards: [
      { aadhar: { 'aadhar-No': '00983', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'clerk',
    mgr: 1031,
    hiredate: ISODate("1983-07-12T00:00:00.000Z"),
    sal: 1400,
    comm: null,
    deptno: 50
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a0a"),
    empid: 1040,
    ename: 'amit',
    address: {
      building: '759',
      coord: [ -73.9925306, 40.7309346 ],
      street: 'Broadway',
      zipcode: '10003'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Indian Red' ],
    fruit: [ 'Crab apples' ],
    cards: [
      { aadhar: { 'aadhar-No': '66623', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'administrator',
    mgr: 1029,
    hiredate: ISODate("1982-12-08T00:00:00.000Z"),
    sal: 3500,
    comm: null,
    deptno: 50,
    phone: [ 85088422, Long("9822884228") ]
  }
]
Type "it" for more
primaryDB> edit db.Emp.aggregate([{$match:{job:"manager"}}])
Opening an editor...

primaryDB> edit db.Emp.aggregate([{$match:{job:"manager"}}])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:79)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }])
    |                                                                                ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]);
Uncaught:
SyntaxError: Unexpected token, expected "," (1:79)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]);
    |                                                                                ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:78)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}])
    |                                                                               ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:78)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }}}])
    |                                                                               ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}])
[
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f8"),
    empid: 1021,
    ename: 'smith',
    address: {
      building: '469',
      coord: [ -73.961704, 40.662942 ],
      street: 'Flatbush Avenue',
      zipcode: '11225'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'red', 'cyan', 'gray' ],
    fruit: [ 'grapes', 'Orange' ],
    cards: [
      { aadhar: { 'aadhar-No': '43564', isActive: true } },
      { PAN: { 'PAN-No': 'smh838', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-05-01T00:00:00.000Z"),
    sal: 3400,
    comm: null,
    deptno: 10
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989f9"),
    empid: 1022,
    ename: 'james',
    address: {
      building: '351',
      coord: [ -73.98513559999999, 40.7676919 ],
      street: 'West   57 Street',
      zipcode: '10019'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Red', 'Blue', 'Green', 'Yellow' ],
    fruit: [ 'Indian Fig' ],
    cards: [
      { aadhar: { 'aadhar-No': '73826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1981-07-09T00:00:00.000Z"),
    sal: 4700,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fa"),
    empid: 1023,
    ename: 'scott',
    address: {
      building: '97-22',
      coord: [ -73.8601152, 40.7311739 ],
      street: '63 Road',
      zipcode: '11374'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Ash Grey', 'White' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93872', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-28T00:00:00.000Z"),
    sal: 2500,
    comm: 350,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fb"),
    empid: 1024,
    ename: 'martin',
    address: {
      building: '8825',
      coord: [ -73.8803827, 40.7643124 ],
      street: 'Astoria Boulevard',
      zipcode: '11369'
    },
    isDocActive: true,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Banana Yellow' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '72877', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-02-20T00:00:00.000Z"),
    sal: 2900,
    comm: 735,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd3989fc"),
    empid: 1025,
    ename: 'crow',
    address: {
      building: '2206',
      coord: [ -74.1377286, 40.6119572 ],
      street: 'Victory Boulevard',
      zipcode: '10314'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Apple Green', 'Ash Grey' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '77876', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1023,
    hiredate: ISODate("1981-09-08T00:00:00.000Z"),
    sal: 3200,
    comm: null,
    deptno: 20
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a03"),
    empid: 1033,
    ename: 'vasant',
    address: {
      building: '705',
      coord: [ -73.9653967, 40.6064339 ],
      street: 'Kings Highway',
      zipcode: '11223'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Bright Green' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '93824', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1982-02-24T00:00:00.000Z"),
    sal: 2200,
    comm: 0,
    deptno: 40
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a04"),
    empid: 1029,
    ename: 'bob',
    address: {
      building: '2300',
      coord: [ -73.8786113, 40.8502883 ],
      street: 'Southern Boulevard',
      zipcode: '10460'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'Copper' ],
    fruit: [],
    cards: [
      { aadhar: { 'aadhar-No': '73122', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'manager',
    mgr: 1020,
    hiredate: ISODate("1980-12-17T00:00:00.000Z"),
    sal: 4900,
    comm: null,
    deptno: 30
  },
  {
    _id: ObjectId("629049c0c0eab0c1bd398a05"),
    empid: 1034,
    ename: 'vasu',
    address: {
      building: '203',
      coord: [ -73.97822040000001, 40.6435254 ],
      street: 'Church Avenue',
      zipcode: '11218'
    },
    isDocActive: false,
    gender: 'male',
    canVote: true,
    canDrive: true,
    color: [ 'India Green' ],
    fruit: [ 'Dates' ],
    cards: [
      { aadhar: { 'aadhar-No': '19826', isActive: true } },
      { PAN: { 'PAN-No': 'Kinj093', isActive: false } },
      { voter: { voterID: 'Ind03o3', isActive: true } },
      {
        licence: {
          'licence-No': 'LMV9478',
          issueDate: '2020-01-01',
          expireDate: '2040-01-01',
          isActive: true
        }
      }
    ],
    job: 'salesman',
    mgr: 1029,
    hiredate: ISODate("1980-02-14T00:00:00.000Z"),
    sal: 2200,
    comm: 250,
    deptno: 40
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:sal}}])
ReferenceError: sal is not defined
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:$sal}}])
ReferenceError: $sal is not defined
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:1}}])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager'
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager'
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager'
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman'
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:'$sal'}}])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200
  }
]
primaryDB> edit db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:'$sal',"New Salary":  }}])
Opening an editor...

primaryDB> edit db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,gender:1,canVote:1,canDrive:1,salary:'$sal',"New Salary":  }}])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: [10, 20] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'New Salary': 30
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'New Salary': 30
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'New Salary': 30
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'New Salary': 30
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'New Salary': 30
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 30
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'New Salary': 30
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 30
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'New Salary': 3475
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'New Salary': 4775
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'New Salary': 2575
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'New Salary': 2975
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'New Salary': 3275
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'New Salary': 4975
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'New Salary': 3475
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'New Salary': 4775
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'New Salary': 2575
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'New Salary': 2975
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'New Salary': 3275
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'New Salary': 4975
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'New Salary': 2275
  }
]
primaryDB> edit db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
Opening an editor...

primaryDB> edit db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', "New Salary": { $add: ["$sal", 75] } } }])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com' "Gross Salary":{ $add : ["$sal","$comm"] } "New Salary": { $multiply: ["$sal", 75] } } }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:192)

> 1 | db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com' "Gross Salary":{ $add : ["$sal","$comm"] } "New Salary": { $multiply: ["$sal", 75] } } }])
    |                                                                                                                                                                                                 ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] } } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'Gross Salary': null,
    'New Salary': 255000
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'Gross Salary': null,
    'New Salary': 352500
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'Gross Salary': 2850,
    'New Salary': 187500
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'Gross Salary': 3635,
    'New Salary': 217500
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'Gross Salary': null,
    'New Salary': 240000
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2200,
    'New Salary': 165000
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'Gross Salary': null,
    'New Salary': 367500
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2450,
    'New Salary': 165000
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] },x:{$multiply:[{$ad :[10,20]},7]} } }])
MongoServerError: Invalid $project :: caused by :: Unrecognized expression '$ad'
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] },x:{$multiply:[{$add :[10,20]},7]} } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'Gross Salary': null,
    'New Salary': 255000,
    x: 210
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'Gross Salary': null,
    'New Salary': 352500,
    x: 210
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'Gross Salary': 2850,
    'New Salary': 187500,
    x: 210
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'Gross Salary': 3635,
    'New Salary': 217500,
    x: 210
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'Gross Salary': null,
    'New Salary': 240000,
    x: 210
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2200,
    'New Salary': 165000,
    x: 210
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'Gross Salary': null,
    'New Salary': 367500,
    x: 210
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2450,
    'New Salary': 165000,
    x: 210
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or: [{ job: "manager" }, { job: "salesman" }] } }, { $project: { _id: 0, ename: 1, job: 1, gender: 1, canVote: 1, canDrive: 1, salary: '$sal', commission:'$com', "Gross Salary":{ $add : ["$sal","$comm"] }, "New Salary": { $multiply: ["$sal", 75] },x:{$multiply:[{$add :[10,20]},7]} } }])
[
  {
    ename: 'smith',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 3400,
    'Gross Salary': null,
    'New Salary': 255000,
    x: 210
  },
  {
    ename: 'james',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4700,
    'Gross Salary': null,
    'New Salary': 352500,
    x: 210
  },
  {
    ename: 'scott',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2500,
    'Gross Salary': 2850,
    'New Salary': 187500,
    x: 210
  },
  {
    ename: 'martin',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2900,
    'Gross Salary': 3635,
    'New Salary': 217500,
    x: 210
  },
  {
    ename: 'crow',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 3200,
    'Gross Salary': null,
    'New Salary': 240000,
    x: 210
  },
  {
    ename: 'vasant',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2200,
    'New Salary': 165000,
    x: 210
  },
  {
    ename: 'bob',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'manager',
    salary: 4900,
    'Gross Salary': null,
    'New Salary': 367500,
    x: 210
  },
  {
    ename: 'vasu',
    gender: 'male',
    canVote: true,
    canDrive: true,
    job: 'salesman',
    salary: 2200,
    'Gross Salary': 2450,
    'New Salary': 165000,
    x: 210
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:{'$salary','$commission'}}}}])
Uncaught:
SyntaxError: Unexpected token (1:181)

> 1 | db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:{'$salary','$commission'}}}}])
    |                                                                                                                                                                                      ^
  2 |

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:['$salary','$commission']}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    salary: 3400,
    commission: null,
    x: null
  },
  {
    ename: 'james',
    job: 'manager',
    salary: 4700,
    commission: null,
    x: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    salary: 2500,
    commission: 350,
    x: 2850
  },
  {
    ename: 'martin',
    job: 'salesman',
    salary: 2900,
    commission: 735,
    x: 3635
  },
  {
    ename: 'crow',
    job: 'salesman',
    salary: 3200,
    commission: null,
    x: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    salary: 2200,
    commission: 0,
    x: 2200
  },
  {
    ename: 'bob',
    job: 'manager',
    salary: 4900,
    commission: null,
    x: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    salary: 2200,
    commission: 250,
    x: 2450
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:['$salary','$commission']},}},{$addFields :{y:{$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    salary: 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    salary: 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    salary: 2500,
    commission: 350,
    x: 2850,
    y: 5700
  },
  {
    ename: 'martin',
    job: 'salesman',
    salary: 2900,
    commission: 735,
    x: 3635,
    y: 7270
  },
  {
    ename: 'crow',
    job: 'salesman',
    salary: 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    salary: 2200,
    commission: 0,
    x: 2200,
    y: 4400
  },
  {
    ename: 'bob',
    job: 'manager',
    salary: 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    salary: 2200,
    commission: 250,
    x: 2450,
    y: 4900
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,salary:'$sal',commission:'$comm'}},{$addFields:{x:{$add:["$Gross Salary",'$commission']},}},{$addFields :{y:{$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    salary: 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    salary: 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    salary: 2500,
    commission: 350,
    x: null,
    y: null
  },
  {
    ename: 'martin',
    job: 'salesman',
    salary: 2900,
    commission: 735,
    x: null,
    y: null
  },
  {
    ename: 'crow',
    job: 'salesman',
    salary: 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    salary: 2200,
    commission: 0,
    x: null,
    y: null
  },
  {
    ename: 'bob',
    job: 'manager',
    salary: 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    salary: 2200,
    commission: 250,
    x: null,
    y: null
  }
]
primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,"Gross Salary":'$sal',commission:'$comm'}},{$addFields:{x:{$add:["$Gross Salary",'$commission']},}},{$addFields :{y:{$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    'Gross Salary': 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    'Gross Salary': 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    'Gross Salary': 2500,
    commission: 350,
    x: 2850,
    y: 5700
  },
  {
    ename: 'martin',
    job: 'salesman',
    'Gross Salary': 2900,
    commission: 735,
    x: 3635,
    y: 7270
  },
  {
    ename: 'crow',
    job: 'salesman',
    'Gross Salary': 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 0,
    x: 2200,
    y: 4400
  },
  {
    ename: 'bob',
    job: 'manager',
    'Gross Salary': 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 250,
    x: 2450,
    y: 4900
  }
]
primaryDB> db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:49)

> 1 | db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}])
    |                                                  ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
... db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
Uncaught:
SyntaxError: Invalid shorthand property initializer. (1:33)

> 1 | db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
    |                                  ^
  2 | db.Emp.aggregate([{$project :{_id=0,sal:1,comm:1}}])
  3 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,sal:1,comm:1} }])
[
  { sal: 2700, comm: null },
  { sal: 3400, comm: null },
  { sal: 4700, comm: null },
  { sal: 2500, comm: 350 },
  { sal: 2900, comm: 735 },
  { sal: 3200, comm: null },
  { sal: 1500, comm: null },
  { sal: 1200, comm: null },
  { sal: 5000, comm: null },
  { sal: 3500, comm: null },
  { sal: 4999, comm: null },
  { sal: 4999, comm: null },
  { sal: 2200, comm: 0 },
  { sal: 4900, comm: null },
  { sal: 2200, comm: 250 },
  { sal: 1200, comm: null },
  { sal: 3400, comm: null },
  { sal: 2900, comm: null },
  { sal: 1400, comm: null },
  { sal: 3500, comm: null }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1} }])
[
  { ename: 'jack', sal: 2700, comm: null },
  { ename: 'smith', sal: 3400, comm: null },
  { ename: 'james', sal: 4700, comm: null },
  { ename: 'scott', sal: 2500, comm: 350 },
  { ename: 'martin', sal: 2900, comm: 735 },
  { ename: 'crow', sal: 3200, comm: null },
  { ename: 'richards', sal: 1500, comm: null },
  { ename: 'blake', sal: 1200, comm: null },
  { ename: 'king', sal: 5000, comm: null },
  { ename: 'peter', sal: 3500, comm: null },
  { ename: 'sharmin', sal: 4999, comm: null },
  { ename: 'vrushali', sal: 4999, comm: null },
  { ename: 'vasant', sal: 2200, comm: 0 },
  { ename: 'bob', sal: 4900, comm: null },
  { ename: 'vasu', sal: 2200, comm: 250 },
  { ename: 'rahul', sal: 1200, comm: null },
  { ename: 'raju', sal: 3400, comm: null },
  { ename: 'saleel', sal: 2900, comm: null },
  { ename: 'ramu', sal: 1400, comm: null },
  { ename: 'amit', sal: 3500, comm: null }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} }])
[
  { ename: 'jack', sal: 2700, comm: null, 'Upper Names': 'JACK' },
  { ename: 'smith', sal: 3400, comm: null, 'Upper Names': 'SMITH' },
  { ename: 'james', sal: 4700, comm: null, 'Upper Names': 'JAMES' },
  { ename: 'scott', sal: 2500, comm: 350, 'Upper Names': 'SCOTT' },
  { ename: 'martin', sal: 2900, comm: 735, 'Upper Names': 'MARTIN' },
  { ename: 'crow', sal: 3200, comm: null, 'Upper Names': 'CROW' },
  {
    ename: 'richards',
    sal: 1500,
    comm: null,
    'Upper Names': 'RICHARDS'
  },
  { ename: 'blake', sal: 1200, comm: null, 'Upper Names': 'BLAKE' },
  { ename: 'king', sal: 5000, comm: null, 'Upper Names': 'KING' },
  { ename: 'peter', sal: 3500, comm: null, 'Upper Names': 'PETER' },
  { ename: 'sharmin', sal: 4999, comm: null, 'Upper Names': 'SHARMIN' },
  {
    ename: 'vrushali',
    sal: 4999,
    comm: null,
    'Upper Names': 'VRUSHALI'
  },
  { ename: 'vasant', sal: 2200, comm: 0, 'Upper Names': 'VASANT' },
  { ename: 'bob', sal: 4900, comm: null, 'Upper Names': 'BOB' },
  { ename: 'vasu', sal: 2200, comm: 250, 'Upper Names': 'VASU' },
  { ename: 'rahul', sal: 1200, comm: null, 'Upper Names': 'RAHUL' },
  { ename: 'raju', sal: 3400, comm: null, 'Upper Names': 'RAJU' },
  { ename: 'saleel', sal: 2900, comm: null, 'Upper Names': 'SALEEL' },
  { ename: 'ramu', sal: 1400, comm: null, 'Upper Names': 'RAMU' },
  { ename: 'amit', sal: 3500, comm: null, 'Upper Names': 'AMIT' }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}}])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:133)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
    |                                                                                                                                      ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:133)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
    |                                                                                                                                      ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ,}])
Uncaught:
SyntaxError: Unexpected token (1:134)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ,}])
    |                                                                                                                                       ^
  2 |

primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}}])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:133)

> 1 | db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
    |                                                                                                                                      ^
  2 |

primaryDB> edit db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} }])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $match: { $or : [{ job: "manager" } , { job : "salesman" }]}}, {$project :{_id:0,ename:1,job:1,"Gross Salary":'$sal',commission:'$comm'}},{$addFields:{x:{$add:["$Gross Salary",'$commission']},}},{$addFields :{y:{$multi$multiply:['$x',2]}}}])
[
  {
    ename: 'smith',
    job: 'manager',
    'Gross Salary': 3400,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'james',
    job: 'manager',
    'Gross Salary': 4700,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'scott',
    job: 'salesman',
    'Gross Salary': 2500,
    commission: 350,
    x: 2850,
    y: 5700
  },
  {
    ename: 'martin',
    job: 'salesman',
    'Gross Salary': 2900,
    commission: 735,
    x: 3635,
    y: 7270
  },
  {
    ename: 'crow',
    job: 'salesman',
    'Gross Salary': 3200,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasant',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 0,
    x: 2200,
    y: 4400
  },
  {
    ename: 'bob',
    job: 'manager',
    'Gross Salary': 4900,
    commission: null,
    x: null,
    y: null
  },
  {
    ename: 'vasu',
    job: 'salesman',
    'Gross Salary': 2200,
    commission: 250,
    x: 2450,
    y: 4900
  }
]
primaryDB> edit db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } }} }])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:158)

> 1 | db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } }} }])
    |                                                                                                                                                               ^
  2 |

primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> edit db.Emp.aggregate([{$project :{_id:0,ename:1,sal:1,comm:1,"Upper Names":{$toUpper:"$ename"}} },{$addFields:{x:{$ifnull:['$comm',0]}}} ])
Opening an editor...

primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifnull: ['$comm', 0] } } }])
MongoServerError: Invalid $addFields :: caused by :: Unrecognized expression '$ifnull'
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifNull: ['$comm', 0] } } }])
[
  { ename: 'jack', sal: 2700, comm: null, 'Upper Names': 'JACK', x: 0 },
  {
    ename: 'smith',
    sal: 3400,
    comm: null,
    'Upper Names': 'SMITH',
    x: 0
  },
  {
    ename: 'james',
    sal: 4700,
    comm: null,
    'Upper Names': 'JAMES',
    x: 0
  },
  {
    ename: 'scott',
    sal: 2500,
    comm: 350,
    'Upper Names': 'SCOTT',
    x: 350
  },
  {
    ename: 'martin',
    sal: 2900,
    comm: 735,
    'Upper Names': 'MARTIN',
    x: 735
  },
  { ename: 'crow', sal: 3200, comm: null, 'Upper Names': 'CROW', x: 0 },
  {
    ename: 'richards',
    sal: 1500,
    comm: null,
    'Upper Names': 'RICHARDS',
    x: 0
  },
  {
    ename: 'blake',
    sal: 1200,
    comm: null,
    'Upper Names': 'BLAKE',
    x: 0
  },
  { ename: 'king', sal: 5000, comm: null, 'Upper Names': 'KING', x: 0 },
  {
    ename: 'peter',
    sal: 3500,
    comm: null,
    'Upper Names': 'PETER',
    x: 0
  },
  {
    ename: 'sharmin',
    sal: 4999,
    comm: null,
    'Upper Names': 'SHARMIN',
    x: 0
  },
  {
    ename: 'vrushali',
    sal: 4999,
    comm: null,
    'Upper Names': 'VRUSHALI',
    x: 0
  },
  {
    ename: 'vasant',
    sal: 2200,
    comm: 0,
    'Upper Names': 'VASANT',
    x: 0
  },
  { ename: 'bob', sal: 4900, comm: null, 'Upper Names': 'BOB', x: 0 },
  {
    ename: 'vasu',
    sal: 2200,
    comm: 250,
    'Upper Names': 'VASU',
    x: 250
  },
  {
    ename: 'rahul',
    sal: 1200,
    comm: null,
    'Upper Names': 'RAHUL',
    x: 0
  },
  { ename: 'raju', sal: 3400, comm: null, 'Upper Names': 'RAJU', x: 0 },
  {
    ename: 'saleel',
    sal: 2900,
    comm: null,
    'Upper Names': 'SALEEL',
    x: 0
  },
  { ename: 'ramu', sal: 1400, comm: null, 'Upper Names': 'RAMU', x: 0 },
  { ename: 'amit', sal: 3500, comm: null, 'Upper Names': 'AMIT', x: 0 }
]
Type "it" for more
primaryDB> db.Emp.aggregate([{ $project: { _id: 0, ename: 1, sal: 1, comm: 1, "Upper Names": { $toUpper: "$ename" } } }, { $addFields: { x: { $ifNull: ['$comm', 0] } } }])